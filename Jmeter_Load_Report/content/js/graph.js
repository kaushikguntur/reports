/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 8584.0, "series": [{"data": [[0.0, 154.0], [0.1, 154.0], [0.2, 163.0], [0.3, 167.0], [0.4, 167.0], [0.5, 179.0], [0.6, 179.0], [0.7, 186.0], [0.8, 186.0], [0.9, 186.0], [1.0, 191.0], [1.1, 191.0], [1.2, 203.0], [1.3, 207.0], [1.4, 217.0], [1.5, 217.0], [1.6, 220.0], [1.7, 220.0], [1.8, 221.0], [1.9, 221.0], [2.0, 226.0], [2.1, 227.0], [2.2, 227.0], [2.3, 227.0], [2.4, 232.0], [2.5, 232.0], [2.6, 242.0], [2.7, 269.0], [2.8, 269.0], [2.9, 272.0], [3.0, 282.0], [3.1, 283.0], [3.2, 283.0], [3.3, 283.0], [3.4, 284.0], [3.5, 288.0], [3.6, 295.0], [3.7, 296.0], [3.8, 297.0], [3.9, 297.0], [4.0, 306.0], [4.1, 309.0], [4.2, 309.0], [4.3, 311.0], [4.4, 311.0], [4.5, 312.0], [4.6, 313.0], [4.7, 315.0], [4.8, 321.0], [4.9, 323.0], [5.0, 323.0], [5.1, 323.0], [5.2, 334.0], [5.3, 335.0], [5.4, 338.0], [5.5, 338.0], [5.6, 340.0], [5.7, 344.0], [5.8, 347.0], [5.9, 350.0], [6.0, 350.0], [6.1, 350.0], [6.2, 351.0], [6.3, 352.0], [6.4, 355.0], [6.5, 357.0], [6.6, 357.0], [6.7, 358.0], [6.8, 360.0], [6.9, 361.0], [7.0, 361.0], [7.1, 367.0], [7.2, 367.0], [7.3, 369.0], [7.4, 374.0], [7.5, 379.0], [7.6, 379.0], [7.7, 379.0], [7.8, 384.0], [7.9, 385.0], [8.0, 387.0], [8.1, 389.0], [8.2, 390.0], [8.3, 390.0], [8.4, 391.0], [8.5, 393.0], [8.6, 394.0], [8.7, 397.0], [8.8, 397.0], [8.9, 398.0], [9.0, 398.0], [9.1, 403.0], [9.2, 410.0], [9.3, 412.0], [9.4, 412.0], [9.5, 412.0], [9.6, 413.0], [9.7, 414.0], [9.8, 416.0], [9.9, 416.0], [10.0, 418.0], [10.1, 419.0], [10.2, 420.0], [10.3, 420.0], [10.4, 420.0], [10.5, 420.0], [10.6, 424.0], [10.7, 431.0], [10.8, 432.0], [10.9, 432.0], [11.0, 432.0], [11.1, 435.0], [11.2, 437.0], [11.3, 438.0], [11.4, 438.0], [11.5, 442.0], [11.6, 442.0], [11.7, 443.0], [11.8, 446.0], [11.9, 452.0], [12.0, 453.0], [12.1, 453.0], [12.2, 458.0], [12.3, 462.0], [12.4, 462.0], [12.5, 465.0], [12.6, 465.0], [12.7, 465.0], [12.8, 468.0], [12.9, 470.0], [13.0, 470.0], [13.1, 474.0], [13.2, 474.0], [13.3, 474.0], [13.4, 476.0], [13.5, 481.0], [13.6, 482.0], [13.7, 484.0], [13.8, 484.0], [13.9, 484.0], [14.0, 485.0], [14.1, 489.0], [14.2, 490.0], [14.3, 490.0], [14.4, 490.0], [14.5, 491.0], [14.6, 493.0], [14.7, 493.0], [14.8, 494.0], [14.9, 494.0], [15.0, 494.0], [15.1, 498.0], [15.2, 499.0], [15.3, 499.0], [15.4, 499.0], [15.5, 499.0], [15.6, 499.0], [15.7, 505.0], [15.8, 508.0], [15.9, 509.0], [16.0, 509.0], [16.1, 509.0], [16.2, 510.0], [16.3, 511.0], [16.4, 511.0], [16.5, 511.0], [16.6, 511.0], [16.7, 512.0], [16.8, 513.0], [16.9, 514.0], [17.0, 514.0], [17.1, 514.0], [17.2, 515.0], [17.3, 516.0], [17.4, 524.0], [17.5, 524.0], [17.6, 524.0], [17.7, 525.0], [17.8, 526.0], [17.9, 527.0], [18.0, 527.0], [18.1, 532.0], [18.2, 532.0], [18.3, 535.0], [18.4, 536.0], [18.5, 536.0], [18.6, 537.0], [18.7, 537.0], [18.8, 538.0], [18.9, 540.0], [19.0, 540.0], [19.1, 541.0], [19.2, 541.0], [19.3, 541.0], [19.4, 547.0], [19.5, 548.0], [19.6, 550.0], [19.7, 551.0], [19.8, 551.0], [19.9, 551.0], [20.0, 553.0], [20.1, 555.0], [20.2, 556.0], [20.3, 557.0], [20.4, 557.0], [20.5, 559.0], [20.6, 560.0], [20.7, 563.0], [20.8, 564.0], [20.9, 564.0], [21.0, 566.0], [21.1, 568.0], [21.2, 572.0], [21.3, 572.0], [21.4, 572.0], [21.5, 572.0], [21.6, 574.0], [21.7, 576.0], [21.8, 584.0], [21.9, 586.0], [22.0, 586.0], [22.1, 588.0], [22.2, 592.0], [22.3, 600.0], [22.4, 601.0], [22.5, 604.0], [22.6, 604.0], [22.7, 604.0], [22.8, 607.0], [22.9, 612.0], [23.0, 612.0], [23.1, 612.0], [23.2, 614.0], [23.3, 616.0], [23.4, 616.0], [23.5, 618.0], [23.6, 619.0], [23.7, 619.0], [23.8, 620.0], [23.9, 622.0], [24.0, 630.0], [24.1, 632.0], [24.2, 632.0], [24.3, 635.0], [24.4, 636.0], [24.5, 640.0], [24.6, 640.0], [24.7, 641.0], [24.8, 641.0], [24.9, 644.0], [25.0, 646.0], [25.1, 650.0], [25.2, 650.0], [25.3, 650.0], [25.4, 651.0], [25.5, 652.0], [25.6, 654.0], [25.7, 655.0], [25.8, 655.0], [25.9, 655.0], [26.0, 657.0], [26.1, 658.0], [26.2, 664.0], [26.3, 665.0], [26.4, 665.0], [26.5, 667.0], [26.6, 669.0], [26.7, 670.0], [26.8, 671.0], [26.9, 673.0], [27.0, 673.0], [27.1, 673.0], [27.2, 674.0], [27.3, 676.0], [27.4, 678.0], [27.5, 678.0], [27.6, 681.0], [27.7, 683.0], [27.8, 686.0], [27.9, 688.0], [28.0, 689.0], [28.1, 689.0], [28.2, 692.0], [28.3, 694.0], [28.4, 699.0], [28.5, 703.0], [28.6, 703.0], [28.7, 704.0], [28.8, 705.0], [28.9, 706.0], [29.0, 708.0], [29.1, 710.0], [29.2, 710.0], [29.3, 711.0], [29.4, 711.0], [29.5, 716.0], [29.6, 718.0], [29.7, 718.0], [29.8, 720.0], [29.9, 722.0], [30.0, 722.0], [30.1, 723.0], [30.2, 725.0], [30.3, 725.0], [30.4, 726.0], [30.5, 747.0], [30.6, 749.0], [30.7, 761.0], [30.8, 761.0], [30.9, 762.0], [31.0, 763.0], [31.1, 763.0], [31.2, 765.0], [31.3, 765.0], [31.4, 765.0], [31.5, 766.0], [31.6, 779.0], [31.7, 786.0], [31.8, 787.0], [31.9, 787.0], [32.0, 789.0], [32.1, 789.0], [32.2, 798.0], [32.3, 799.0], [32.4, 802.0], [32.5, 802.0], [32.6, 803.0], [32.7, 805.0], [32.8, 806.0], [32.9, 810.0], [33.0, 810.0], [33.1, 812.0], [33.2, 812.0], [33.3, 815.0], [33.4, 816.0], [33.5, 818.0], [33.6, 818.0], [33.7, 819.0], [33.8, 822.0], [33.9, 824.0], [34.0, 827.0], [34.1, 827.0], [34.2, 832.0], [34.3, 833.0], [34.4, 836.0], [34.5, 841.0], [34.6, 841.0], [34.7, 841.0], [34.8, 843.0], [34.9, 847.0], [35.0, 851.0], [35.1, 851.0], [35.2, 851.0], [35.3, 852.0], [35.4, 853.0], [35.5, 853.0], [35.6, 857.0], [35.7, 858.0], [35.8, 858.0], [35.9, 861.0], [36.0, 870.0], [36.1, 871.0], [36.2, 876.0], [36.3, 876.0], [36.4, 876.0], [36.5, 878.0], [36.6, 885.0], [36.7, 886.0], [36.8, 888.0], [36.9, 888.0], [37.0, 896.0], [37.1, 897.0], [37.2, 899.0], [37.3, 900.0], [37.4, 900.0], [37.5, 900.0], [37.6, 912.0], [37.7, 923.0], [37.8, 924.0], [37.9, 925.0], [38.0, 925.0], [38.1, 927.0], [38.2, 929.0], [38.3, 933.0], [38.4, 939.0], [38.5, 939.0], [38.6, 940.0], [38.7, 943.0], [38.8, 947.0], [38.9, 947.0], [39.0, 947.0], [39.1, 947.0], [39.2, 951.0], [39.3, 955.0], [39.4, 965.0], [39.5, 968.0], [39.6, 968.0], [39.7, 971.0], [39.8, 973.0], [39.9, 974.0], [40.0, 975.0], [40.1, 979.0], [40.2, 979.0], [40.3, 980.0], [40.4, 989.0], [40.5, 992.0], [40.6, 995.0], [40.7, 995.0], [40.8, 995.0], [40.9, 997.0], [41.0, 997.0], [41.1, 1001.0], [41.2, 1002.0], [41.3, 1002.0], [41.4, 1008.0], [41.5, 1008.0], [41.6, 1011.0], [41.7, 1012.0], [41.8, 1012.0], [41.9, 1013.0], [42.0, 1014.0], [42.1, 1016.0], [42.2, 1017.0], [42.3, 1018.0], [42.4, 1018.0], [42.5, 1021.0], [42.6, 1023.0], [42.7, 1032.0], [42.8, 1035.0], [42.9, 1035.0], [43.0, 1039.0], [43.1, 1041.0], [43.2, 1043.0], [43.3, 1044.0], [43.4, 1048.0], [43.5, 1048.0], [43.6, 1048.0], [43.7, 1055.0], [43.8, 1056.0], [43.9, 1058.0], [44.0, 1058.0], [44.1, 1060.0], [44.2, 1062.0], [44.3, 1068.0], [44.4, 1068.0], [44.5, 1069.0], [44.6, 1069.0], [44.7, 1072.0], [44.8, 1075.0], [44.9, 1080.0], [45.0, 1081.0], [45.1, 1081.0], [45.2, 1083.0], [45.3, 1085.0], [45.4, 1086.0], [45.5, 1090.0], [45.6, 1090.0], [45.7, 1090.0], [45.8, 1097.0], [45.9, 1100.0], [46.0, 1106.0], [46.1, 1107.0], [46.2, 1107.0], [46.3, 1108.0], [46.4, 1118.0], [46.5, 1121.0], [46.6, 1126.0], [46.7, 1134.0], [46.8, 1134.0], [46.9, 1135.0], [47.0, 1147.0], [47.1, 1147.0], [47.2, 1151.0], [47.3, 1151.0], [47.4, 1155.0], [47.5, 1155.0], [47.6, 1155.0], [47.7, 1158.0], [47.8, 1160.0], [47.9, 1160.0], [48.0, 1161.0], [48.1, 1163.0], [48.2, 1167.0], [48.3, 1168.0], [48.4, 1168.0], [48.5, 1170.0], [48.6, 1176.0], [48.7, 1179.0], [48.8, 1180.0], [48.9, 1185.0], [49.0, 1185.0], [49.1, 1186.0], [49.2, 1187.0], [49.3, 1190.0], [49.4, 1190.0], [49.5, 1190.0], [49.6, 1195.0], [49.7, 1195.0], [49.8, 1196.0], [49.9, 1199.0], [50.0, 1201.0], [50.1, 1201.0], [50.2, 1203.0], [50.3, 1204.0], [50.4, 1209.0], [50.5, 1215.0], [50.6, 1215.0], [50.7, 1217.0], [50.8, 1217.0], [50.9, 1220.0], [51.0, 1220.0], [51.1, 1220.0], [51.2, 1220.0], [51.3, 1221.0], [51.4, 1223.0], [51.5, 1224.0], [51.6, 1227.0], [51.7, 1227.0], [51.8, 1239.0], [51.9, 1245.0], [52.0, 1245.0], [52.1, 1246.0], [52.2, 1246.0], [52.3, 1251.0], [52.4, 1260.0], [52.5, 1263.0], [52.6, 1264.0], [52.7, 1270.0], [52.8, 1270.0], [52.9, 1274.0], [53.0, 1276.0], [53.1, 1277.0], [53.2, 1278.0], [53.3, 1278.0], [53.4, 1278.0], [53.5, 1279.0], [53.6, 1281.0], [53.7, 1281.0], [53.8, 1282.0], [53.9, 1282.0], [54.0, 1286.0], [54.1, 1287.0], [54.2, 1287.0], [54.3, 1288.0], [54.4, 1288.0], [54.5, 1290.0], [54.6, 1292.0], [54.7, 1299.0], [54.8, 1299.0], [54.9, 1304.0], [55.0, 1304.0], [55.1, 1314.0], [55.2, 1315.0], [55.3, 1317.0], [55.4, 1319.0], [55.5, 1319.0], [55.6, 1320.0], [55.7, 1325.0], [55.8, 1326.0], [55.9, 1327.0], [56.0, 1330.0], [56.1, 1330.0], [56.2, 1331.0], [56.3, 1333.0], [56.4, 1340.0], [56.5, 1345.0], [56.6, 1345.0], [56.7, 1346.0], [56.8, 1349.0], [56.9, 1349.0], [57.0, 1349.0], [57.1, 1350.0], [57.2, 1350.0], [57.3, 1351.0], [57.4, 1354.0], [57.5, 1355.0], [57.6, 1356.0], [57.7, 1356.0], [57.8, 1356.0], [57.9, 1357.0], [58.0, 1359.0], [58.1, 1361.0], [58.2, 1361.0], [58.3, 1361.0], [58.4, 1363.0], [58.5, 1365.0], [58.6, 1365.0], [58.7, 1365.0], [58.8, 1365.0], [58.9, 1370.0], [59.0, 1371.0], [59.1, 1378.0], [59.2, 1383.0], [59.3, 1384.0], [59.4, 1384.0], [59.5, 1384.0], [59.6, 1386.0], [59.7, 1388.0], [59.8, 1390.0], [59.9, 1390.0], [60.0, 1397.0], [60.1, 1399.0], [60.2, 1399.0], [60.3, 1400.0], [60.4, 1401.0], [60.5, 1401.0], [60.6, 1404.0], [60.7, 1406.0], [60.8, 1406.0], [60.9, 1407.0], [61.0, 1407.0], [61.1, 1409.0], [61.2, 1409.0], [61.3, 1410.0], [61.4, 1412.0], [61.5, 1415.0], [61.6, 1415.0], [61.7, 1416.0], [61.8, 1417.0], [61.9, 1421.0], [62.0, 1421.0], [62.1, 1421.0], [62.2, 1421.0], [62.3, 1422.0], [62.4, 1422.0], [62.5, 1426.0], [62.6, 1428.0], [62.7, 1428.0], [62.8, 1429.0], [62.9, 1432.0], [63.0, 1437.0], [63.1, 1439.0], [63.2, 1439.0], [63.3, 1440.0], [63.4, 1440.0], [63.5, 1440.0], [63.6, 1440.0], [63.7, 1443.0], [63.8, 1443.0], [63.9, 1449.0], [64.0, 1449.0], [64.1, 1450.0], [64.2, 1450.0], [64.3, 1450.0], [64.4, 1451.0], [64.5, 1452.0], [64.6, 1453.0], [64.7, 1454.0], [64.8, 1455.0], [64.9, 1455.0], [65.0, 1455.0], [65.1, 1456.0], [65.2, 1457.0], [65.3, 1458.0], [65.4, 1458.0], [65.5, 1458.0], [65.6, 1459.0], [65.7, 1464.0], [65.8, 1464.0], [65.9, 1466.0], [66.0, 1466.0], [66.1, 1468.0], [66.2, 1469.0], [66.3, 1470.0], [66.4, 1471.0], [66.5, 1471.0], [66.6, 1471.0], [66.7, 1473.0], [66.8, 1473.0], [66.9, 1474.0], [67.0, 1474.0], [67.1, 1474.0], [67.2, 1476.0], [67.3, 1476.0], [67.4, 1478.0], [67.5, 1478.0], [67.6, 1478.0], [67.7, 1479.0], [67.8, 1482.0], [67.9, 1484.0], [68.0, 1485.0], [68.1, 1486.0], [68.2, 1486.0], [68.3, 1489.0], [68.4, 1491.0], [68.5, 1492.0], [68.6, 1493.0], [68.7, 1493.0], [68.8, 1494.0], [68.9, 1497.0], [69.0, 1503.0], [69.1, 1506.0], [69.2, 1508.0], [69.3, 1508.0], [69.4, 1509.0], [69.5, 1509.0], [69.6, 1513.0], [69.7, 1515.0], [69.8, 1515.0], [69.9, 1516.0], [70.0, 1520.0], [70.1, 1520.0], [70.2, 1521.0], [70.3, 1523.0], [70.4, 1523.0], [70.5, 1528.0], [70.6, 1529.0], [70.7, 1530.0], [70.8, 1531.0], [70.9, 1531.0], [71.0, 1538.0], [71.1, 1542.0], [71.2, 1543.0], [71.3, 1543.0], [71.4, 1545.0], [71.5, 1545.0], [71.6, 1546.0], [71.7, 1548.0], [71.8, 1548.0], [71.9, 1549.0], [72.0, 1549.0], [72.1, 1555.0], [72.2, 1558.0], [72.3, 1564.0], [72.4, 1566.0], [72.5, 1566.0], [72.6, 1566.0], [72.7, 1566.0], [72.8, 1570.0], [72.9, 1573.0], [73.0, 1574.0], [73.1, 1574.0], [73.2, 1575.0], [73.3, 1575.0], [73.4, 1578.0], [73.5, 1578.0], [73.6, 1581.0], [73.7, 1581.0], [73.8, 1583.0], [73.9, 1586.0], [74.0, 1587.0], [74.1, 1590.0], [74.2, 1590.0], [74.3, 1591.0], [74.4, 1592.0], [74.5, 1597.0], [74.6, 1599.0], [74.7, 1599.0], [74.8, 1599.0], [74.9, 1602.0], [75.0, 1604.0], [75.1, 1606.0], [75.2, 1606.0], [75.3, 1606.0], [75.4, 1608.0], [75.5, 1608.0], [75.6, 1609.0], [75.7, 1611.0], [75.8, 1616.0], [75.9, 1616.0], [76.0, 1617.0], [76.1, 1623.0], [76.2, 1624.0], [76.3, 1625.0], [76.4, 1625.0], [76.5, 1626.0], [76.6, 1627.0], [76.7, 1628.0], [76.8, 1631.0], [76.9, 1631.0], [77.0, 1631.0], [77.1, 1635.0], [77.2, 1635.0], [77.3, 1639.0], [77.4, 1639.0], [77.5, 1639.0], [77.6, 1642.0], [77.7, 1643.0], [77.8, 1644.0], [77.9, 1644.0], [78.0, 1646.0], [78.1, 1646.0], [78.2, 1647.0], [78.3, 1647.0], [78.4, 1647.0], [78.5, 1649.0], [78.6, 1649.0], [78.7, 1649.0], [78.8, 1650.0], [78.9, 1653.0], [79.0, 1654.0], [79.1, 1659.0], [79.2, 1659.0], [79.3, 1660.0], [79.4, 1661.0], [79.5, 1661.0], [79.6, 1662.0], [79.7, 1662.0], [79.8, 1663.0], [79.9, 1666.0], [80.0, 1668.0], [80.1, 1670.0], [80.2, 1670.0], [80.3, 1670.0], [80.4, 1671.0], [80.5, 1672.0], [80.6, 1672.0], [80.7, 1674.0], [80.8, 1674.0], [80.9, 1675.0], [81.0, 1677.0], [81.1, 1678.0], [81.2, 1680.0], [81.3, 1681.0], [81.4, 1681.0], [81.5, 1682.0], [81.6, 1684.0], [81.7, 1689.0], [81.8, 1693.0], [81.9, 1693.0], [82.0, 1704.0], [82.1, 1706.0], [82.2, 1708.0], [82.3, 1709.0], [82.4, 1710.0], [82.5, 1710.0], [82.6, 1711.0], [82.7, 1711.0], [82.8, 1713.0], [82.9, 1714.0], [83.0, 1714.0], [83.1, 1726.0], [83.2, 1727.0], [83.3, 1737.0], [83.4, 1738.0], [83.5, 1739.0], [83.6, 1739.0], [83.7, 1740.0], [83.8, 1741.0], [83.9, 1743.0], [84.0, 1745.0], [84.1, 1745.0], [84.2, 1745.0], [84.3, 1747.0], [84.4, 1755.0], [84.5, 1755.0], [84.6, 1756.0], [84.7, 1756.0], [84.8, 1757.0], [84.9, 1760.0], [85.0, 1766.0], [85.1, 1769.0], [85.2, 1769.0], [85.3, 1771.0], [85.4, 1775.0], [85.5, 1777.0], [85.6, 1778.0], [85.7, 1779.0], [85.8, 1779.0], [85.9, 1783.0], [86.0, 1788.0], [86.1, 1789.0], [86.2, 1789.0], [86.3, 1789.0], [86.4, 1789.0], [86.5, 1793.0], [86.6, 1802.0], [86.7, 1804.0], [86.8, 1809.0], [86.9, 1809.0], [87.0, 1810.0], [87.1, 1812.0], [87.2, 1812.0], [87.3, 1815.0], [87.4, 1815.0], [87.5, 1816.0], [87.6, 1818.0], [87.7, 1826.0], [87.8, 1830.0], [87.9, 1844.0], [88.0, 1844.0], [88.1, 1849.0], [88.2, 1851.0], [88.3, 1860.0], [88.4, 1862.0], [88.5, 1862.0], [88.6, 1863.0], [88.7, 1869.0], [88.8, 1869.0], [88.9, 1870.0], [89.0, 1870.0], [89.1, 1870.0], [89.2, 1870.0], [89.3, 1871.0], [89.4, 1877.0], [89.5, 1879.0], [89.6, 1879.0], [89.7, 1881.0], [89.8, 1894.0], [89.9, 1903.0], [90.0, 1910.0], [90.1, 1912.0], [90.2, 1912.0], [90.3, 1913.0], [90.4, 1913.0], [90.5, 1914.0], [90.6, 1915.0], [90.7, 1915.0], [90.8, 1925.0], [90.9, 1926.0], [91.0, 1931.0], [91.1, 1934.0], [91.2, 1936.0], [91.3, 1936.0], [91.4, 1940.0], [91.5, 1945.0], [91.6, 1946.0], [91.7, 1946.0], [91.8, 1946.0], [91.9, 1948.0], [92.0, 1951.0], [92.1, 2017.0], [92.2, 2025.0], [92.3, 2034.0], [92.4, 2034.0], [92.5, 2037.0], [92.6, 2041.0], [92.7, 2048.0], [92.8, 2080.0], [92.9, 2080.0], [93.0, 2107.0], [93.1, 2110.0], [93.2, 2111.0], [93.3, 2116.0], [93.4, 2123.0], [93.5, 2123.0], [93.6, 2131.0], [93.7, 2138.0], [93.8, 2139.0], [93.9, 2140.0], [94.0, 2140.0], [94.1, 2175.0], [94.2, 2192.0], [94.3, 2201.0], [94.4, 2214.0], [94.5, 2237.0], [94.6, 2237.0], [94.7, 2241.0], [94.8, 2260.0], [94.9, 2279.0], [95.0, 2289.0], [95.1, 2289.0], [95.2, 2302.0], [95.3, 2309.0], [95.4, 2324.0], [95.5, 2336.0], [95.6, 2342.0], [95.7, 2342.0], [95.8, 2383.0], [95.9, 2405.0], [96.0, 2433.0], [96.1, 2458.0], [96.2, 2458.0], [96.3, 2564.0], [96.4, 2594.0], [96.5, 2617.0], [96.6, 2617.0], [96.7, 2619.0], [96.8, 2619.0], [96.9, 2643.0], [97.0, 2657.0], [97.1, 2682.0], [97.2, 2692.0], [97.3, 2692.0], [97.4, 2692.0], [97.5, 2706.0], [97.6, 2715.0], [97.7, 2741.0], [97.8, 2763.0], [97.9, 2763.0], [98.0, 2763.0], [98.1, 2793.0], [98.2, 2822.0], [98.3, 2857.0], [98.4, 2857.0], [98.5, 2908.0], [98.6, 2920.0], [98.7, 3175.0], [98.8, 4671.0], [98.9, 5200.0], [99.0, 5200.0], [99.1, 5593.0], [99.2, 6409.0], [99.3, 6690.0], [99.4, 7811.0], [99.5, 7811.0], [99.6, 8297.0], [99.7, 8515.0], [99.8, 8561.0], [99.9, 8584.0], [100.0, 8584.0]], "isOverall": false, "label": "GetTaskDetailList", "isController": false}, {"data": [[0.0, 1.0], [0.1, 1.0], [0.2, 1.0], [0.3, 2.0], [0.4, 2.0], [0.5, 2.0], [0.6, 2.0], [0.7, 2.0], [0.8, 2.0], [0.9, 2.0], [1.0, 2.0], [1.1, 2.0], [1.2, 2.0], [1.3, 2.0], [1.4, 2.0], [1.5, 2.0], [1.6, 2.0], [1.7, 2.0], [1.8, 2.0], [1.9, 2.0], [2.0, 2.0], [2.1, 2.0], [2.2, 2.0], [2.3, 2.0], [2.4, 2.0], [2.5, 2.0], [2.6, 2.0], [2.7, 2.0], [2.8, 2.0], [2.9, 2.0], [3.0, 2.0], [3.1, 2.0], [3.2, 2.0], [3.3, 2.0], [3.4, 2.0], [3.5, 2.0], [3.6, 3.0], [3.7, 3.0], [3.8, 3.0], [3.9, 3.0], [4.0, 3.0], [4.1, 3.0], [4.2, 3.0], [4.3, 3.0], [4.4, 3.0], [4.5, 3.0], [4.6, 3.0], [4.7, 3.0], [4.8, 3.0], [4.9, 3.0], [5.0, 3.0], [5.1, 3.0], [5.2, 3.0], [5.3, 3.0], [5.4, 3.0], [5.5, 3.0], [5.6, 3.0], [5.7, 3.0], [5.8, 3.0], [5.9, 3.0], [6.0, 3.0], [6.1, 3.0], [6.2, 3.0], [6.3, 3.0], [6.4, 3.0], [6.5, 3.0], [6.6, 3.0], [6.7, 3.0], [6.8, 3.0], [6.9, 3.0], [7.0, 3.0], [7.1, 3.0], [7.2, 3.0], [7.3, 3.0], [7.4, 3.0], [7.5, 3.0], [7.6, 3.0], [7.7, 3.0], [7.8, 3.0], [7.9, 3.0], [8.0, 3.0], [8.1, 3.0], [8.2, 3.0], [8.3, 3.0], [8.4, 3.0], [8.5, 3.0], [8.6, 3.0], [8.7, 3.0], [8.8, 3.0], [8.9, 3.0], [9.0, 3.0], [9.1, 3.0], [9.2, 3.0], [9.3, 3.0], [9.4, 3.0], [9.5, 3.0], [9.6, 3.0], [9.7, 3.0], [9.8, 3.0], [9.9, 3.0], [10.0, 3.0], [10.1, 3.0], [10.2, 3.0], [10.3, 3.0], [10.4, 3.0], [10.5, 3.0], [10.6, 3.0], [10.7, 3.0], [10.8, 3.0], [10.9, 3.0], [11.0, 3.0], [11.1, 3.0], [11.2, 3.0], [11.3, 3.0], [11.4, 3.0], [11.5, 3.0], [11.6, 3.0], [11.7, 3.0], [11.8, 3.0], [11.9, 3.0], [12.0, 3.0], [12.1, 3.0], [12.2, 3.0], [12.3, 3.0], [12.4, 3.0], [12.5, 3.0], [12.6, 3.0], [12.7, 3.0], [12.8, 3.0], [12.9, 3.0], [13.0, 3.0], [13.1, 3.0], [13.2, 3.0], [13.3, 3.0], [13.4, 3.0], [13.5, 3.0], [13.6, 3.0], [13.7, 3.0], [13.8, 3.0], [13.9, 3.0], [14.0, 3.0], [14.1, 3.0], [14.2, 3.0], [14.3, 3.0], [14.4, 3.0], [14.5, 3.0], [14.6, 3.0], [14.7, 3.0], [14.8, 3.0], [14.9, 3.0], [15.0, 3.0], [15.1, 3.0], [15.2, 3.0], [15.3, 3.0], [15.4, 3.0], [15.5, 3.0], [15.6, 3.0], [15.7, 3.0], [15.8, 3.0], [15.9, 3.0], [16.0, 3.0], [16.1, 3.0], [16.2, 3.0], [16.3, 3.0], [16.4, 3.0], [16.5, 3.0], [16.6, 3.0], [16.7, 3.0], [16.8, 3.0], [16.9, 3.0], [17.0, 3.0], [17.1, 3.0], [17.2, 3.0], [17.3, 3.0], [17.4, 3.0], [17.5, 3.0], [17.6, 3.0], [17.7, 3.0], [17.8, 3.0], [17.9, 3.0], [18.0, 3.0], [18.1, 3.0], [18.2, 3.0], [18.3, 3.0], [18.4, 3.0], [18.5, 3.0], [18.6, 3.0], [18.7, 3.0], [18.8, 3.0], [18.9, 3.0], [19.0, 3.0], [19.1, 3.0], [19.2, 3.0], [19.3, 3.0], [19.4, 4.0], [19.5, 4.0], [19.6, 4.0], [19.7, 4.0], [19.8, 4.0], [19.9, 4.0], [20.0, 4.0], [20.1, 4.0], [20.2, 4.0], [20.3, 4.0], [20.4, 4.0], [20.5, 4.0], [20.6, 4.0], [20.7, 4.0], [20.8, 4.0], [20.9, 4.0], [21.0, 4.0], [21.1, 4.0], [21.2, 4.0], [21.3, 4.0], [21.4, 4.0], [21.5, 4.0], [21.6, 4.0], [21.7, 4.0], [21.8, 4.0], [21.9, 4.0], [22.0, 4.0], [22.1, 4.0], [22.2, 4.0], [22.3, 4.0], [22.4, 4.0], [22.5, 4.0], [22.6, 4.0], [22.7, 4.0], [22.8, 4.0], [22.9, 4.0], [23.0, 4.0], [23.1, 4.0], [23.2, 4.0], [23.3, 4.0], [23.4, 4.0], [23.5, 4.0], [23.6, 4.0], [23.7, 4.0], [23.8, 4.0], [23.9, 4.0], [24.0, 4.0], [24.1, 4.0], [24.2, 4.0], [24.3, 4.0], [24.4, 4.0], [24.5, 4.0], [24.6, 4.0], [24.7, 4.0], [24.8, 4.0], [24.9, 4.0], [25.0, 4.0], [25.1, 4.0], [25.2, 4.0], [25.3, 4.0], [25.4, 4.0], [25.5, 4.0], [25.6, 4.0], [25.7, 4.0], [25.8, 4.0], [25.9, 4.0], [26.0, 4.0], [26.1, 4.0], [26.2, 4.0], [26.3, 4.0], [26.4, 4.0], [26.5, 4.0], [26.6, 4.0], [26.7, 4.0], [26.8, 4.0], [26.9, 4.0], [27.0, 4.0], [27.1, 4.0], [27.2, 4.0], [27.3, 4.0], [27.4, 4.0], [27.5, 4.0], [27.6, 4.0], [27.7, 4.0], [27.8, 4.0], [27.9, 4.0], [28.0, 4.0], [28.1, 4.0], [28.2, 4.0], [28.3, 4.0], [28.4, 4.0], [28.5, 4.0], [28.6, 4.0], [28.7, 4.0], [28.8, 4.0], [28.9, 4.0], [29.0, 4.0], [29.1, 4.0], [29.2, 4.0], [29.3, 4.0], [29.4, 4.0], [29.5, 4.0], [29.6, 4.0], [29.7, 4.0], [29.8, 4.0], [29.9, 4.0], [30.0, 4.0], [30.1, 4.0], [30.2, 4.0], [30.3, 4.0], [30.4, 4.0], [30.5, 4.0], [30.6, 4.0], [30.7, 4.0], [30.8, 4.0], [30.9, 4.0], [31.0, 4.0], [31.1, 4.0], [31.2, 4.0], [31.3, 4.0], [31.4, 4.0], [31.5, 4.0], [31.6, 4.0], [31.7, 4.0], [31.8, 4.0], [31.9, 4.0], [32.0, 4.0], [32.1, 4.0], [32.2, 4.0], [32.3, 4.0], [32.4, 4.0], [32.5, 4.0], [32.6, 4.0], [32.7, 4.0], [32.8, 4.0], [32.9, 4.0], [33.0, 4.0], [33.1, 4.0], [33.2, 4.0], [33.3, 4.0], [33.4, 4.0], [33.5, 4.0], [33.6, 4.0], [33.7, 4.0], [33.8, 4.0], [33.9, 4.0], [34.0, 4.0], [34.1, 4.0], [34.2, 4.0], [34.3, 4.0], [34.4, 4.0], [34.5, 4.0], [34.6, 4.0], [34.7, 4.0], [34.8, 4.0], [34.9, 4.0], [35.0, 4.0], [35.1, 4.0], [35.2, 4.0], [35.3, 4.0], [35.4, 4.0], [35.5, 4.0], [35.6, 4.0], [35.7, 4.0], [35.8, 4.0], [35.9, 4.0], [36.0, 4.0], [36.1, 4.0], [36.2, 4.0], [36.3, 4.0], [36.4, 4.0], [36.5, 4.0], [36.6, 5.0], [36.7, 5.0], [36.8, 5.0], [36.9, 5.0], [37.0, 5.0], [37.1, 5.0], [37.2, 5.0], [37.3, 5.0], [37.4, 5.0], [37.5, 5.0], [37.6, 5.0], [37.7, 5.0], [37.8, 5.0], [37.9, 5.0], [38.0, 5.0], [38.1, 5.0], [38.2, 5.0], [38.3, 5.0], [38.4, 5.0], [38.5, 5.0], [38.6, 5.0], [38.7, 5.0], [38.8, 5.0], [38.9, 5.0], [39.0, 5.0], [39.1, 5.0], [39.2, 5.0], [39.3, 5.0], [39.4, 5.0], [39.5, 5.0], [39.6, 5.0], [39.7, 5.0], [39.8, 5.0], [39.9, 5.0], [40.0, 5.0], [40.1, 5.0], [40.2, 5.0], [40.3, 5.0], [40.4, 5.0], [40.5, 5.0], [40.6, 5.0], [40.7, 5.0], [40.8, 5.0], [40.9, 5.0], [41.0, 5.0], [41.1, 5.0], [41.2, 5.0], [41.3, 5.0], [41.4, 5.0], [41.5, 5.0], [41.6, 5.0], [41.7, 5.0], [41.8, 5.0], [41.9, 5.0], [42.0, 5.0], [42.1, 5.0], [42.2, 5.0], [42.3, 5.0], [42.4, 5.0], [42.5, 5.0], [42.6, 5.0], [42.7, 5.0], [42.8, 5.0], [42.9, 5.0], [43.0, 5.0], [43.1, 5.0], [43.2, 5.0], [43.3, 5.0], [43.4, 5.0], [43.5, 5.0], [43.6, 5.0], [43.7, 5.0], [43.8, 5.0], [43.9, 5.0], [44.0, 5.0], [44.1, 5.0], [44.2, 5.0], [44.3, 5.0], [44.4, 5.0], [44.5, 5.0], [44.6, 5.0], [44.7, 5.0], [44.8, 5.0], [44.9, 5.0], [45.0, 5.0], [45.1, 5.0], [45.2, 5.0], [45.3, 5.0], [45.4, 5.0], [45.5, 5.0], [45.6, 5.0], [45.7, 5.0], [45.8, 5.0], [45.9, 5.0], [46.0, 5.0], [46.1, 5.0], [46.2, 5.0], [46.3, 5.0], [46.4, 5.0], [46.5, 5.0], [46.6, 5.0], [46.7, 5.0], [46.8, 5.0], [46.9, 5.0], [47.0, 5.0], [47.1, 5.0], [47.2, 5.0], [47.3, 5.0], [47.4, 5.0], [47.5, 5.0], [47.6, 5.0], [47.7, 5.0], [47.8, 5.0], [47.9, 5.0], [48.0, 5.0], [48.1, 5.0], [48.2, 5.0], [48.3, 5.0], [48.4, 5.0], [48.5, 5.0], [48.6, 5.0], [48.7, 5.0], [48.8, 5.0], [48.9, 5.0], [49.0, 5.0], [49.1, 5.0], [49.2, 5.0], [49.3, 5.0], [49.4, 5.0], [49.5, 5.0], [49.6, 5.0], [49.7, 5.0], [49.8, 5.0], [49.9, 5.0], [50.0, 5.0], [50.1, 5.0], [50.2, 5.0], [50.3, 5.0], [50.4, 5.0], [50.5, 5.0], [50.6, 5.0], [50.7, 5.0], [50.8, 5.0], [50.9, 5.0], [51.0, 5.0], [51.1, 5.0], [51.2, 5.0], [51.3, 5.0], [51.4, 5.0], [51.5, 5.0], [51.6, 5.0], [51.7, 5.0], [51.8, 5.0], [51.9, 5.0], [52.0, 5.0], [52.1, 5.0], [52.2, 6.0], [52.3, 6.0], [52.4, 6.0], [52.5, 6.0], [52.6, 6.0], [52.7, 6.0], [52.8, 6.0], [52.9, 6.0], [53.0, 6.0], [53.1, 6.0], [53.2, 6.0], [53.3, 6.0], [53.4, 6.0], [53.5, 6.0], [53.6, 6.0], [53.7, 6.0], [53.8, 6.0], [53.9, 6.0], [54.0, 6.0], [54.1, 6.0], [54.2, 6.0], [54.3, 6.0], [54.4, 6.0], [54.5, 6.0], [54.6, 6.0], [54.7, 6.0], [54.8, 6.0], [54.9, 6.0], [55.0, 6.0], [55.1, 6.0], [55.2, 6.0], [55.3, 6.0], [55.4, 6.0], [55.5, 6.0], [55.6, 6.0], [55.7, 6.0], [55.8, 6.0], [55.9, 6.0], [56.0, 6.0], [56.1, 6.0], [56.2, 6.0], [56.3, 6.0], [56.4, 6.0], [56.5, 6.0], [56.6, 6.0], [56.7, 6.0], [56.8, 6.0], [56.9, 6.0], [57.0, 6.0], [57.1, 6.0], [57.2, 6.0], [57.3, 6.0], [57.4, 6.0], [57.5, 6.0], [57.6, 6.0], [57.7, 6.0], [57.8, 6.0], [57.9, 6.0], [58.0, 6.0], [58.1, 6.0], [58.2, 6.0], [58.3, 6.0], [58.4, 6.0], [58.5, 6.0], [58.6, 6.0], [58.7, 6.0], [58.8, 6.0], [58.9, 6.0], [59.0, 6.0], [59.1, 6.0], [59.2, 6.0], [59.3, 6.0], [59.4, 6.0], [59.5, 6.0], [59.6, 6.0], [59.7, 6.0], [59.8, 6.0], [59.9, 6.0], [60.0, 6.0], [60.1, 6.0], [60.2, 6.0], [60.3, 6.0], [60.4, 6.0], [60.5, 6.0], [60.6, 6.0], [60.7, 6.0], [60.8, 6.0], [60.9, 6.0], [61.0, 6.0], [61.1, 6.0], [61.2, 6.0], [61.3, 7.0], [61.4, 7.0], [61.5, 7.0], [61.6, 7.0], [61.7, 7.0], [61.8, 7.0], [61.9, 7.0], [62.0, 7.0], [62.1, 7.0], [62.2, 7.0], [62.3, 7.0], [62.4, 7.0], [62.5, 7.0], [62.6, 7.0], [62.7, 7.0], [62.8, 7.0], [62.9, 7.0], [63.0, 7.0], [63.1, 7.0], [63.2, 7.0], [63.3, 7.0], [63.4, 7.0], [63.5, 7.0], [63.6, 7.0], [63.7, 7.0], [63.8, 7.0], [63.9, 7.0], [64.0, 7.0], [64.1, 7.0], [64.2, 7.0], [64.3, 7.0], [64.4, 7.0], [64.5, 7.0], [64.6, 7.0], [64.7, 7.0], [64.8, 7.0], [64.9, 7.0], [65.0, 7.0], [65.1, 7.0], [65.2, 7.0], [65.3, 7.0], [65.4, 7.0], [65.5, 7.0], [65.6, 7.0], [65.7, 7.0], [65.8, 7.0], [65.9, 7.0], [66.0, 7.0], [66.1, 7.0], [66.2, 7.0], [66.3, 7.0], [66.4, 7.0], [66.5, 7.0], [66.6, 7.0], [66.7, 7.0], [66.8, 7.0], [66.9, 7.0], [67.0, 7.0], [67.1, 7.0], [67.2, 7.0], [67.3, 7.0], [67.4, 7.0], [67.5, 8.0], [67.6, 8.0], [67.7, 8.0], [67.8, 8.0], [67.9, 8.0], [68.0, 8.0], [68.1, 8.0], [68.2, 8.0], [68.3, 8.0], [68.4, 8.0], [68.5, 8.0], [68.6, 8.0], [68.7, 8.0], [68.8, 8.0], [68.9, 8.0], [69.0, 8.0], [69.1, 8.0], [69.2, 8.0], [69.3, 8.0], [69.4, 8.0], [69.5, 8.0], [69.6, 8.0], [69.7, 8.0], [69.8, 8.0], [69.9, 8.0], [70.0, 8.0], [70.1, 8.0], [70.2, 8.0], [70.3, 8.0], [70.4, 8.0], [70.5, 8.0], [70.6, 8.0], [70.7, 8.0], [70.8, 8.0], [70.9, 9.0], [71.0, 9.0], [71.1, 9.0], [71.2, 9.0], [71.3, 9.0], [71.4, 9.0], [71.5, 9.0], [71.6, 9.0], [71.7, 9.0], [71.8, 9.0], [71.9, 9.0], [72.0, 9.0], [72.1, 9.0], [72.2, 9.0], [72.3, 9.0], [72.4, 9.0], [72.5, 9.0], [72.6, 9.0], [72.7, 9.0], [72.8, 9.0], [72.9, 9.0], [73.0, 9.0], [73.1, 9.0], [73.2, 9.0], [73.3, 9.0], [73.4, 9.0], [73.5, 9.0], [73.6, 9.0], [73.7, 9.0], [73.8, 9.0], [73.9, 9.0], [74.0, 9.0], [74.1, 9.0], [74.2, 9.0], [74.3, 9.0], [74.4, 9.0], [74.5, 9.0], [74.6, 9.0], [74.7, 9.0], [74.8, 9.0], [74.9, 10.0], [75.0, 10.0], [75.1, 10.0], [75.2, 10.0], [75.3, 10.0], [75.4, 10.0], [75.5, 10.0], [75.6, 10.0], [75.7, 10.0], [75.8, 10.0], [75.9, 10.0], [76.0, 10.0], [76.1, 10.0], [76.2, 10.0], [76.3, 10.0], [76.4, 10.0], [76.5, 10.0], [76.6, 10.0], [76.7, 10.0], [76.8, 10.0], [76.9, 10.0], [77.0, 11.0], [77.1, 11.0], [77.2, 11.0], [77.3, 11.0], [77.4, 11.0], [77.5, 11.0], [77.6, 11.0], [77.7, 11.0], [77.8, 11.0], [77.9, 11.0], [78.0, 11.0], [78.1, 11.0], [78.2, 11.0], [78.3, 11.0], [78.4, 11.0], [78.5, 11.0], [78.6, 11.0], [78.7, 11.0], [78.8, 11.0], [78.9, 12.0], [79.0, 12.0], [79.1, 12.0], [79.2, 12.0], [79.3, 12.0], [79.4, 12.0], [79.5, 12.0], [79.6, 12.0], [79.7, 12.0], [79.8, 12.0], [79.9, 12.0], [80.0, 12.0], [80.1, 12.0], [80.2, 12.0], [80.3, 12.0], [80.4, 12.0], [80.5, 13.0], [80.6, 13.0], [80.7, 13.0], [80.8, 13.0], [80.9, 13.0], [81.0, 13.0], [81.1, 13.0], [81.2, 13.0], [81.3, 13.0], [81.4, 13.0], [81.5, 13.0], [81.6, 13.0], [81.7, 13.0], [81.8, 13.0], [81.9, 13.0], [82.0, 13.0], [82.1, 13.0], [82.2, 14.0], [82.3, 14.0], [82.4, 14.0], [82.5, 14.0], [82.6, 14.0], [82.7, 14.0], [82.8, 14.0], [82.9, 14.0], [83.0, 14.0], [83.1, 14.0], [83.2, 14.0], [83.3, 14.0], [83.4, 15.0], [83.5, 15.0], [83.6, 15.0], [83.7, 15.0], [83.8, 15.0], [83.9, 15.0], [84.0, 15.0], [84.1, 15.0], [84.2, 15.0], [84.3, 15.0], [84.4, 15.0], [84.5, 15.0], [84.6, 15.0], [84.7, 16.0], [84.8, 16.0], [84.9, 16.0], [85.0, 16.0], [85.1, 16.0], [85.2, 16.0], [85.3, 16.0], [85.4, 16.0], [85.5, 16.0], [85.6, 17.0], [85.7, 17.0], [85.8, 17.0], [85.9, 17.0], [86.0, 17.0], [86.1, 17.0], [86.2, 17.0], [86.3, 17.0], [86.4, 17.0], [86.5, 17.0], [86.6, 18.0], [86.7, 18.0], [86.8, 18.0], [86.9, 18.0], [87.0, 18.0], [87.1, 18.0], [87.2, 18.0], [87.3, 18.0], [87.4, 18.0], [87.5, 18.0], [87.6, 18.0], [87.7, 18.0], [87.8, 19.0], [87.9, 19.0], [88.0, 19.0], [88.1, 19.0], [88.2, 19.0], [88.3, 19.0], [88.4, 19.0], [88.5, 20.0], [88.6, 20.0], [88.7, 20.0], [88.8, 20.0], [88.9, 20.0], [89.0, 20.0], [89.1, 20.0], [89.2, 20.0], [89.3, 20.0], [89.4, 20.0], [89.5, 21.0], [89.6, 21.0], [89.7, 21.0], [89.8, 21.0], [89.9, 21.0], [90.0, 21.0], [90.1, 21.0], [90.2, 22.0], [90.3, 22.0], [90.4, 22.0], [90.5, 22.0], [90.6, 22.0], [90.7, 22.0], [90.8, 23.0], [90.9, 23.0], [91.0, 23.0], [91.1, 24.0], [91.2, 24.0], [91.3, 24.0], [91.4, 24.0], [91.5, 24.0], [91.6, 24.0], [91.7, 24.0], [91.8, 25.0], [91.9, 25.0], [92.0, 25.0], [92.1, 25.0], [92.2, 25.0], [92.3, 26.0], [92.4, 26.0], [92.5, 27.0], [92.6, 27.0], [92.7, 27.0], [92.8, 27.0], [92.9, 27.0], [93.0, 28.0], [93.1, 29.0], [93.2, 29.0], [93.3, 29.0], [93.4, 30.0], [93.5, 31.0], [93.6, 31.0], [93.7, 31.0], [93.8, 31.0], [93.9, 32.0], [94.0, 33.0], [94.1, 33.0], [94.2, 34.0], [94.3, 34.0], [94.4, 34.0], [94.5, 34.0], [94.6, 34.0], [94.7, 35.0], [94.8, 36.0], [94.9, 38.0], [95.0, 38.0], [95.1, 38.0], [95.2, 39.0], [95.3, 39.0], [95.4, 39.0], [95.5, 39.0], [95.6, 40.0], [95.7, 40.0], [95.8, 41.0], [95.9, 43.0], [96.0, 43.0], [96.1, 43.0], [96.2, 47.0], [96.3, 48.0], [96.4, 49.0], [96.5, 51.0], [96.6, 52.0], [96.7, 52.0], [96.8, 57.0], [96.9, 57.0], [97.0, 59.0], [97.1, 59.0], [97.2, 59.0], [97.3, 64.0], [97.4, 66.0], [97.5, 68.0], [97.6, 71.0], [97.7, 72.0], [97.8, 72.0], [97.9, 73.0], [98.0, 73.0], [98.1, 92.0], [98.2, 93.0], [98.3, 101.0], [98.4, 101.0], [98.5, 107.0], [98.6, 122.0], [98.7, 152.0], [98.8, 194.0], [98.9, 194.0], [99.0, 197.0], [99.1, 355.0], [99.2, 518.0], [99.3, 593.0], [99.4, 641.0], [99.5, 641.0], [99.6, 665.0], [99.7, 3064.0], [99.8, 3601.0], [99.9, 5317.0], [100.0, 5317.0]], "isOverall": false, "label": "GetUserDetails", "isController": false}, {"data": [[0.0, 1.0], [0.1, 1.0], [0.2, 1.0], [0.3, 1.0], [0.4, 1.0], [0.5, 2.0], [0.6, 2.0], [0.7, 2.0], [0.8, 2.0], [0.9, 2.0], [1.0, 2.0], [1.1, 2.0], [1.2, 2.0], [1.3, 2.0], [1.4, 2.0], [1.5, 2.0], [1.6, 2.0], [1.7, 2.0], [1.8, 2.0], [1.9, 2.0], [2.0, 2.0], [2.1, 2.0], [2.2, 2.0], [2.3, 2.0], [2.4, 2.0], [2.5, 2.0], [2.6, 2.0], [2.7, 2.0], [2.8, 2.0], [2.9, 2.0], [3.0, 2.0], [3.1, 2.0], [3.2, 2.0], [3.3, 2.0], [3.4, 2.0], [3.5, 2.0], [3.6, 2.0], [3.7, 2.0], [3.8, 2.0], [3.9, 2.0], [4.0, 2.0], [4.1, 2.0], [4.2, 2.0], [4.3, 2.0], [4.4, 2.0], [4.5, 2.0], [4.6, 2.0], [4.7, 2.0], [4.8, 2.0], [4.9, 2.0], [5.0, 2.0], [5.1, 2.0], [5.2, 2.0], [5.3, 2.0], [5.4, 2.0], [5.5, 2.0], [5.6, 2.0], [5.7, 2.0], [5.8, 2.0], [5.9, 2.0], [6.0, 2.0], [6.1, 2.0], [6.2, 3.0], [6.3, 3.0], [6.4, 3.0], [6.5, 3.0], [6.6, 3.0], [6.7, 3.0], [6.8, 3.0], [6.9, 3.0], [7.0, 3.0], [7.1, 3.0], [7.2, 3.0], [7.3, 3.0], [7.4, 3.0], [7.5, 3.0], [7.6, 3.0], [7.7, 3.0], [7.8, 3.0], [7.9, 3.0], [8.0, 3.0], [8.1, 3.0], [8.2, 3.0], [8.3, 3.0], [8.4, 3.0], [8.5, 3.0], [8.6, 3.0], [8.7, 3.0], [8.8, 3.0], [8.9, 3.0], [9.0, 3.0], [9.1, 3.0], [9.2, 3.0], [9.3, 3.0], [9.4, 3.0], [9.5, 3.0], [9.6, 3.0], [9.7, 3.0], [9.8, 3.0], [9.9, 3.0], [10.0, 3.0], [10.1, 3.0], [10.2, 3.0], [10.3, 3.0], [10.4, 3.0], [10.5, 3.0], [10.6, 3.0], [10.7, 3.0], [10.8, 3.0], [10.9, 3.0], [11.0, 3.0], [11.1, 3.0], [11.2, 3.0], [11.3, 3.0], [11.4, 3.0], [11.5, 3.0], [11.6, 3.0], [11.7, 3.0], [11.8, 3.0], [11.9, 3.0], [12.0, 3.0], [12.1, 3.0], [12.2, 3.0], [12.3, 3.0], [12.4, 3.0], [12.5, 3.0], [12.6, 3.0], [12.7, 3.0], [12.8, 3.0], [12.9, 3.0], [13.0, 3.0], [13.1, 3.0], [13.2, 3.0], [13.3, 3.0], [13.4, 3.0], [13.5, 3.0], [13.6, 3.0], [13.7, 3.0], [13.8, 3.0], [13.9, 3.0], [14.0, 3.0], [14.1, 3.0], [14.2, 3.0], [14.3, 3.0], [14.4, 3.0], [14.5, 3.0], [14.6, 3.0], [14.7, 3.0], [14.8, 3.0], [14.9, 3.0], [15.0, 3.0], [15.1, 3.0], [15.2, 3.0], [15.3, 3.0], [15.4, 3.0], [15.5, 3.0], [15.6, 3.0], [15.7, 3.0], [15.8, 3.0], [15.9, 3.0], [16.0, 3.0], [16.1, 3.0], [16.2, 3.0], [16.3, 3.0], [16.4, 3.0], [16.5, 3.0], [16.6, 3.0], [16.7, 3.0], [16.8, 3.0], [16.9, 3.0], [17.0, 3.0], [17.1, 3.0], [17.2, 3.0], [17.3, 3.0], [17.4, 3.0], [17.5, 3.0], [17.6, 3.0], [17.7, 3.0], [17.8, 3.0], [17.9, 3.0], [18.0, 3.0], [18.1, 3.0], [18.2, 3.0], [18.3, 3.0], [18.4, 3.0], [18.5, 3.0], [18.6, 3.0], [18.7, 3.0], [18.8, 3.0], [18.9, 3.0], [19.0, 3.0], [19.1, 3.0], [19.2, 3.0], [19.3, 3.0], [19.4, 3.0], [19.5, 3.0], [19.6, 3.0], [19.7, 3.0], [19.8, 3.0], [19.9, 3.0], [20.0, 3.0], [20.1, 3.0], [20.2, 3.0], [20.3, 3.0], [20.4, 3.0], [20.5, 3.0], [20.6, 3.0], [20.7, 3.0], [20.8, 3.0], [20.9, 3.0], [21.0, 3.0], [21.1, 3.0], [21.2, 3.0], [21.3, 4.0], [21.4, 4.0], [21.5, 4.0], [21.6, 4.0], [21.7, 4.0], [21.8, 4.0], [21.9, 4.0], [22.0, 4.0], [22.1, 4.0], [22.2, 4.0], [22.3, 4.0], [22.4, 4.0], [22.5, 4.0], [22.6, 4.0], [22.7, 4.0], [22.8, 4.0], [22.9, 4.0], [23.0, 4.0], [23.1, 4.0], [23.2, 4.0], [23.3, 4.0], [23.4, 4.0], [23.5, 4.0], [23.6, 4.0], [23.7, 4.0], [23.8, 4.0], [23.9, 4.0], [24.0, 4.0], [24.1, 4.0], [24.2, 4.0], [24.3, 4.0], [24.4, 4.0], [24.5, 4.0], [24.6, 4.0], [24.7, 4.0], [24.8, 4.0], [24.9, 4.0], [25.0, 4.0], [25.1, 4.0], [25.2, 4.0], [25.3, 4.0], [25.4, 4.0], [25.5, 4.0], [25.6, 4.0], [25.7, 4.0], [25.8, 4.0], [25.9, 4.0], [26.0, 4.0], [26.1, 4.0], [26.2, 4.0], [26.3, 4.0], [26.4, 4.0], [26.5, 4.0], [26.6, 4.0], [26.7, 4.0], [26.8, 4.0], [26.9, 4.0], [27.0, 4.0], [27.1, 4.0], [27.2, 4.0], [27.3, 4.0], [27.4, 4.0], [27.5, 4.0], [27.6, 4.0], [27.7, 4.0], [27.8, 4.0], [27.9, 4.0], [28.0, 4.0], [28.1, 4.0], [28.2, 4.0], [28.3, 4.0], [28.4, 4.0], [28.5, 4.0], [28.6, 4.0], [28.7, 4.0], [28.8, 4.0], [28.9, 4.0], [29.0, 4.0], [29.1, 4.0], [29.2, 4.0], [29.3, 4.0], [29.4, 4.0], [29.5, 4.0], [29.6, 4.0], [29.7, 4.0], [29.8, 4.0], [29.9, 4.0], [30.0, 4.0], [30.1, 4.0], [30.2, 4.0], [30.3, 4.0], [30.4, 4.0], [30.5, 4.0], [30.6, 4.0], [30.7, 4.0], [30.8, 4.0], [30.9, 4.0], [31.0, 4.0], [31.1, 4.0], [31.2, 4.0], [31.3, 4.0], [31.4, 4.0], [31.5, 4.0], [31.6, 4.0], [31.7, 4.0], [31.8, 4.0], [31.9, 4.0], [32.0, 4.0], [32.1, 4.0], [32.2, 4.0], [32.3, 4.0], [32.4, 4.0], [32.5, 4.0], [32.6, 4.0], [32.7, 4.0], [32.8, 4.0], [32.9, 4.0], [33.0, 4.0], [33.1, 4.0], [33.2, 4.0], [33.3, 4.0], [33.4, 4.0], [33.5, 4.0], [33.6, 4.0], [33.7, 4.0], [33.8, 4.0], [33.9, 4.0], [34.0, 4.0], [34.1, 4.0], [34.2, 4.0], [34.3, 4.0], [34.4, 4.0], [34.5, 4.0], [34.6, 4.0], [34.7, 4.0], [34.8, 4.0], [34.9, 4.0], [35.0, 4.0], [35.1, 4.0], [35.2, 4.0], [35.3, 4.0], [35.4, 4.0], [35.5, 4.0], [35.6, 4.0], [35.7, 4.0], [35.8, 4.0], [35.9, 4.0], [36.0, 4.0], [36.1, 4.0], [36.2, 4.0], [36.3, 4.0], [36.4, 4.0], [36.5, 4.0], [36.6, 4.0], [36.7, 4.0], [36.8, 4.0], [36.9, 4.0], [37.0, 4.0], [37.1, 4.0], [37.2, 4.0], [37.3, 4.0], [37.4, 4.0], [37.5, 4.0], [37.6, 4.0], [37.7, 4.0], [37.8, 4.0], [37.9, 4.0], [38.0, 4.0], [38.1, 4.0], [38.2, 4.0], [38.3, 4.0], [38.4, 4.0], [38.5, 4.0], [38.6, 4.0], [38.7, 4.0], [38.8, 4.0], [38.9, 4.0], [39.0, 4.0], [39.1, 4.0], [39.2, 4.0], [39.3, 4.0], [39.4, 4.0], [39.5, 4.0], [39.6, 4.0], [39.7, 4.0], [39.8, 4.0], [39.9, 4.0], [40.0, 4.0], [40.1, 4.0], [40.2, 4.0], [40.3, 4.0], [40.4, 4.0], [40.5, 4.0], [40.6, 4.0], [40.7, 4.0], [40.8, 4.0], [40.9, 4.0], [41.0, 4.0], [41.1, 4.0], [41.2, 4.0], [41.3, 4.0], [41.4, 4.0], [41.5, 4.0], [41.6, 4.0], [41.7, 4.0], [41.8, 4.0], [41.9, 4.0], [42.0, 4.0], [42.1, 5.0], [42.2, 5.0], [42.3, 5.0], [42.4, 5.0], [42.5, 5.0], [42.6, 5.0], [42.7, 5.0], [42.8, 5.0], [42.9, 5.0], [43.0, 5.0], [43.1, 5.0], [43.2, 5.0], [43.3, 5.0], [43.4, 5.0], [43.5, 5.0], [43.6, 5.0], [43.7, 5.0], [43.8, 5.0], [43.9, 5.0], [44.0, 5.0], [44.1, 5.0], [44.2, 5.0], [44.3, 5.0], [44.4, 5.0], [44.5, 5.0], [44.6, 5.0], [44.7, 5.0], [44.8, 5.0], [44.9, 5.0], [45.0, 5.0], [45.1, 5.0], [45.2, 5.0], [45.3, 5.0], [45.4, 5.0], [45.5, 5.0], [45.6, 5.0], [45.7, 5.0], [45.8, 5.0], [45.9, 5.0], [46.0, 5.0], [46.1, 5.0], [46.2, 5.0], [46.3, 5.0], [46.4, 5.0], [46.5, 5.0], [46.6, 5.0], [46.7, 5.0], [46.8, 5.0], [46.9, 5.0], [47.0, 5.0], [47.1, 5.0], [47.2, 5.0], [47.3, 5.0], [47.4, 5.0], [47.5, 5.0], [47.6, 5.0], [47.7, 5.0], [47.8, 5.0], [47.9, 5.0], [48.0, 5.0], [48.1, 5.0], [48.2, 5.0], [48.3, 5.0], [48.4, 5.0], [48.5, 5.0], [48.6, 5.0], [48.7, 5.0], [48.8, 5.0], [48.9, 5.0], [49.0, 5.0], [49.1, 5.0], [49.2, 5.0], [49.3, 5.0], [49.4, 5.0], [49.5, 5.0], [49.6, 5.0], [49.7, 5.0], [49.8, 5.0], [49.9, 5.0], [50.0, 5.0], [50.1, 5.0], [50.2, 5.0], [50.3, 5.0], [50.4, 5.0], [50.5, 5.0], [50.6, 5.0], [50.7, 5.0], [50.8, 5.0], [50.9, 5.0], [51.0, 5.0], [51.1, 5.0], [51.2, 5.0], [51.3, 5.0], [51.4, 5.0], [51.5, 5.0], [51.6, 5.0], [51.7, 5.0], [51.8, 5.0], [51.9, 5.0], [52.0, 5.0], [52.1, 5.0], [52.2, 5.0], [52.3, 5.0], [52.4, 5.0], [52.5, 5.0], [52.6, 5.0], [52.7, 5.0], [52.8, 5.0], [52.9, 5.0], [53.0, 5.0], [53.1, 5.0], [53.2, 5.0], [53.3, 5.0], [53.4, 5.0], [53.5, 5.0], [53.6, 5.0], [53.7, 5.0], [53.8, 5.0], [53.9, 5.0], [54.0, 5.0], [54.1, 5.0], [54.2, 5.0], [54.3, 5.0], [54.4, 5.0], [54.5, 5.0], [54.6, 5.0], [54.7, 5.0], [54.8, 5.0], [54.9, 5.0], [55.0, 5.0], [55.1, 5.0], [55.2, 5.0], [55.3, 5.0], [55.4, 5.0], [55.5, 5.0], [55.6, 5.0], [55.7, 5.0], [55.8, 5.0], [55.9, 5.0], [56.0, 5.0], [56.1, 5.0], [56.2, 5.0], [56.3, 5.0], [56.4, 5.0], [56.5, 5.0], [56.6, 5.0], [56.7, 5.0], [56.8, 5.0], [56.9, 5.0], [57.0, 5.0], [57.1, 5.0], [57.2, 5.0], [57.3, 5.0], [57.4, 6.0], [57.5, 6.0], [57.6, 6.0], [57.7, 6.0], [57.8, 6.0], [57.9, 6.0], [58.0, 6.0], [58.1, 6.0], [58.2, 6.0], [58.3, 6.0], [58.4, 6.0], [58.5, 6.0], [58.6, 6.0], [58.7, 6.0], [58.8, 6.0], [58.9, 6.0], [59.0, 6.0], [59.1, 6.0], [59.2, 6.0], [59.3, 6.0], [59.4, 6.0], [59.5, 6.0], [59.6, 6.0], [59.7, 6.0], [59.8, 6.0], [59.9, 6.0], [60.0, 6.0], [60.1, 6.0], [60.2, 6.0], [60.3, 6.0], [60.4, 6.0], [60.5, 6.0], [60.6, 6.0], [60.7, 6.0], [60.8, 6.0], [60.9, 6.0], [61.0, 6.0], [61.1, 6.0], [61.2, 6.0], [61.3, 6.0], [61.4, 6.0], [61.5, 6.0], [61.6, 6.0], [61.7, 6.0], [61.8, 6.0], [61.9, 6.0], [62.0, 6.0], [62.1, 6.0], [62.2, 6.0], [62.3, 6.0], [62.4, 6.0], [62.5, 6.0], [62.6, 6.0], [62.7, 6.0], [62.8, 6.0], [62.9, 6.0], [63.0, 6.0], [63.1, 6.0], [63.2, 6.0], [63.3, 6.0], [63.4, 6.0], [63.5, 6.0], [63.6, 6.0], [63.7, 6.0], [63.8, 6.0], [63.9, 6.0], [64.0, 6.0], [64.1, 6.0], [64.2, 6.0], [64.3, 6.0], [64.4, 6.0], [64.5, 6.0], [64.6, 6.0], [64.7, 6.0], [64.8, 6.0], [64.9, 6.0], [65.0, 6.0], [65.1, 6.0], [65.2, 6.0], [65.3, 6.0], [65.4, 6.0], [65.5, 6.0], [65.6, 6.0], [65.7, 6.0], [65.8, 6.0], [65.9, 6.0], [66.0, 6.0], [66.1, 7.0], [66.2, 7.0], [66.3, 7.0], [66.4, 7.0], [66.5, 7.0], [66.6, 7.0], [66.7, 7.0], [66.8, 7.0], [66.9, 7.0], [67.0, 7.0], [67.1, 7.0], [67.2, 7.0], [67.3, 7.0], [67.4, 7.0], [67.5, 7.0], [67.6, 7.0], [67.7, 7.0], [67.8, 7.0], [67.9, 7.0], [68.0, 7.0], [68.1, 7.0], [68.2, 7.0], [68.3, 7.0], [68.4, 7.0], [68.5, 7.0], [68.6, 7.0], [68.7, 7.0], [68.8, 7.0], [68.9, 7.0], [69.0, 7.0], [69.1, 7.0], [69.2, 7.0], [69.3, 7.0], [69.4, 7.0], [69.5, 7.0], [69.6, 7.0], [69.7, 7.0], [69.8, 7.0], [69.9, 7.0], [70.0, 7.0], [70.1, 7.0], [70.2, 7.0], [70.3, 7.0], [70.4, 7.0], [70.5, 7.0], [70.6, 7.0], [70.7, 7.0], [70.8, 7.0], [70.9, 7.0], [71.0, 7.0], [71.1, 7.0], [71.2, 7.0], [71.3, 7.0], [71.4, 7.0], [71.5, 7.0], [71.6, 7.0], [71.7, 7.0], [71.8, 7.0], [71.9, 7.0], [72.0, 7.0], [72.1, 8.0], [72.2, 8.0], [72.3, 8.0], [72.4, 8.0], [72.5, 8.0], [72.6, 8.0], [72.7, 8.0], [72.8, 8.0], [72.9, 8.0], [73.0, 8.0], [73.1, 8.0], [73.2, 8.0], [73.3, 8.0], [73.4, 8.0], [73.5, 8.0], [73.6, 8.0], [73.7, 8.0], [73.8, 8.0], [73.9, 8.0], [74.0, 8.0], [74.1, 8.0], [74.2, 8.0], [74.3, 8.0], [74.4, 8.0], [74.5, 8.0], [74.6, 8.0], [74.7, 8.0], [74.8, 8.0], [74.9, 8.0], [75.0, 8.0], [75.1, 8.0], [75.2, 8.0], [75.3, 8.0], [75.4, 8.0], [75.5, 8.0], [75.6, 9.0], [75.7, 9.0], [75.8, 9.0], [75.9, 9.0], [76.0, 9.0], [76.1, 9.0], [76.2, 9.0], [76.3, 9.0], [76.4, 9.0], [76.5, 9.0], [76.6, 9.0], [76.7, 9.0], [76.8, 9.0], [76.9, 9.0], [77.0, 9.0], [77.1, 9.0], [77.2, 9.0], [77.3, 9.0], [77.4, 9.0], [77.5, 9.0], [77.6, 9.0], [77.7, 9.0], [77.8, 9.0], [77.9, 9.0], [78.0, 9.0], [78.1, 9.0], [78.2, 9.0], [78.3, 9.0], [78.4, 9.0], [78.5, 10.0], [78.6, 10.0], [78.7, 10.0], [78.8, 10.0], [78.9, 10.0], [79.0, 10.0], [79.1, 10.0], [79.2, 10.0], [79.3, 10.0], [79.4, 10.0], [79.5, 10.0], [79.6, 10.0], [79.7, 10.0], [79.8, 10.0], [79.9, 10.0], [80.0, 10.0], [80.1, 10.0], [80.2, 10.0], [80.3, 10.0], [80.4, 10.0], [80.5, 10.0], [80.6, 10.0], [80.7, 10.0], [80.8, 10.0], [80.9, 10.0], [81.0, 11.0], [81.1, 11.0], [81.2, 11.0], [81.3, 11.0], [81.4, 11.0], [81.5, 11.0], [81.6, 11.0], [81.7, 11.0], [81.8, 11.0], [81.9, 11.0], [82.0, 11.0], [82.1, 11.0], [82.2, 11.0], [82.3, 11.0], [82.4, 11.0], [82.5, 11.0], [82.6, 11.0], [82.7, 11.0], [82.8, 11.0], [82.9, 11.0], [83.0, 11.0], [83.1, 11.0], [83.2, 11.0], [83.3, 12.0], [83.4, 12.0], [83.5, 12.0], [83.6, 12.0], [83.7, 12.0], [83.8, 12.0], [83.9, 12.0], [84.0, 12.0], [84.1, 12.0], [84.2, 12.0], [84.3, 12.0], [84.4, 13.0], [84.5, 13.0], [84.6, 13.0], [84.7, 13.0], [84.8, 13.0], [84.9, 13.0], [85.0, 13.0], [85.1, 13.0], [85.2, 13.0], [85.3, 13.0], [85.4, 13.0], [85.5, 13.0], [85.6, 13.0], [85.7, 13.0], [85.8, 13.0], [85.9, 14.0], [86.0, 14.0], [86.1, 14.0], [86.2, 14.0], [86.3, 14.0], [86.4, 14.0], [86.5, 14.0], [86.6, 14.0], [86.7, 15.0], [86.8, 15.0], [86.9, 15.0], [87.0, 15.0], [87.1, 15.0], [87.2, 15.0], [87.3, 16.0], [87.4, 16.0], [87.5, 16.0], [87.6, 16.0], [87.7, 16.0], [87.8, 16.0], [87.9, 16.0], [88.0, 16.0], [88.1, 16.0], [88.2, 16.0], [88.3, 16.0], [88.4, 16.0], [88.5, 16.0], [88.6, 16.0], [88.7, 17.0], [88.8, 17.0], [88.9, 17.0], [89.0, 17.0], [89.1, 17.0], [89.2, 17.0], [89.3, 17.0], [89.4, 17.0], [89.5, 18.0], [89.6, 18.0], [89.7, 19.0], [89.8, 19.0], [89.9, 19.0], [90.0, 19.0], [90.1, 19.0], [90.2, 19.0], [90.3, 19.0], [90.4, 20.0], [90.5, 20.0], [90.6, 20.0], [90.7, 20.0], [90.8, 20.0], [90.9, 21.0], [91.0, 21.0], [91.1, 21.0], [91.2, 21.0], [91.3, 21.0], [91.4, 21.0], [91.5, 22.0], [91.6, 23.0], [91.7, 23.0], [91.8, 23.0], [91.9, 24.0], [92.0, 24.0], [92.1, 24.0], [92.2, 25.0], [92.3, 25.0], [92.4, 25.0], [92.5, 25.0], [92.6, 25.0], [92.7, 25.0], [92.8, 26.0], [92.9, 26.0], [93.0, 26.0], [93.1, 26.0], [93.2, 27.0], [93.3, 28.0], [93.4, 29.0], [93.5, 29.0], [93.6, 30.0], [93.7, 30.0], [93.8, 32.0], [93.9, 32.0], [94.0, 32.0], [94.1, 33.0], [94.2, 33.0], [94.3, 33.0], [94.4, 33.0], [94.5, 34.0], [94.6, 34.0], [94.7, 34.0], [94.8, 34.0], [94.9, 35.0], [95.0, 36.0], [95.1, 36.0], [95.2, 36.0], [95.3, 37.0], [95.4, 41.0], [95.5, 41.0], [95.6, 46.0], [95.7, 46.0], [95.8, 51.0], [95.9, 52.0], [96.0, 54.0], [96.1, 55.0], [96.2, 55.0], [96.3, 55.0], [96.4, 56.0], [96.5, 58.0], [96.6, 58.0], [96.7, 60.0], [96.8, 60.0], [96.9, 61.0], [97.0, 61.0], [97.1, 64.0], [97.2, 65.0], [97.3, 65.0], [97.4, 66.0], [97.5, 68.0], [97.6, 71.0], [97.7, 73.0], [97.8, 78.0], [97.9, 78.0], [98.0, 82.0], [98.1, 85.0], [98.2, 86.0], [98.3, 91.0], [98.4, 91.0], [98.5, 93.0], [98.6, 107.0], [98.7, 109.0], [98.8, 110.0], [98.9, 135.0], [99.0, 135.0], [99.1, 157.0], [99.2, 164.0], [99.3, 194.0], [99.4, 210.0], [99.5, 210.0], [99.6, 220.0], [99.7, 251.0], [99.8, 802.0], [99.9, 907.0], [100.0, 907.0]], "isOverall": false, "label": "GetParentTaskList", "isController": false}, {"data": [[0.0, 25.0], [0.1, 25.0], [0.2, 25.0], [0.3, 27.0], [0.4, 29.0], [0.5, 29.0], [0.6, 29.0], [0.7, 31.0], [0.8, 32.0], [0.9, 33.0], [1.0, 34.0], [1.1, 34.0], [1.2, 35.0], [1.3, 36.0], [1.4, 36.0], [1.5, 37.0], [1.6, 39.0], [1.7, 39.0], [1.8, 39.0], [1.9, 39.0], [2.0, 39.0], [2.1, 39.0], [2.2, 39.0], [2.3, 40.0], [2.4, 40.0], [2.5, 40.0], [2.6, 41.0], [2.7, 41.0], [2.8, 41.0], [2.9, 41.0], [3.0, 42.0], [3.1, 42.0], [3.2, 43.0], [3.3, 43.0], [3.4, 43.0], [3.5, 44.0], [3.6, 45.0], [3.7, 45.0], [3.8, 45.0], [3.9, 45.0], [4.0, 46.0], [4.1, 46.0], [4.2, 47.0], [4.3, 47.0], [4.4, 47.0], [4.5, 47.0], [4.6, 48.0], [4.7, 49.0], [4.8, 49.0], [4.9, 51.0], [5.0, 51.0], [5.1, 51.0], [5.2, 51.0], [5.3, 52.0], [5.4, 52.0], [5.5, 52.0], [5.6, 53.0], [5.7, 53.0], [5.8, 53.0], [5.9, 53.0], [6.0, 54.0], [6.1, 54.0], [6.2, 54.0], [6.3, 54.0], [6.4, 54.0], [6.5, 55.0], [6.6, 55.0], [6.7, 55.0], [6.8, 56.0], [6.9, 57.0], [7.0, 57.0], [7.1, 57.0], [7.2, 57.0], [7.3, 57.0], [7.4, 57.0], [7.5, 57.0], [7.6, 58.0], [7.7, 58.0], [7.8, 58.0], [7.9, 58.0], [8.0, 58.0], [8.1, 58.0], [8.2, 59.0], [8.3, 59.0], [8.4, 59.0], [8.5, 59.0], [8.6, 59.0], [8.7, 59.0], [8.8, 59.0], [8.9, 59.0], [9.0, 60.0], [9.1, 60.0], [9.2, 60.0], [9.3, 60.0], [9.4, 60.0], [9.5, 60.0], [9.6, 61.0], [9.7, 62.0], [9.8, 62.0], [9.9, 62.0], [10.0, 62.0], [10.1, 62.0], [10.2, 63.0], [10.3, 63.0], [10.4, 63.0], [10.5, 63.0], [10.6, 63.0], [10.7, 63.0], [10.8, 63.0], [10.9, 63.0], [11.0, 63.0], [11.1, 64.0], [11.2, 64.0], [11.3, 64.0], [11.4, 64.0], [11.5, 64.0], [11.6, 64.0], [11.7, 64.0], [11.8, 64.0], [11.9, 65.0], [12.0, 65.0], [12.1, 65.0], [12.2, 65.0], [12.3, 65.0], [12.4, 65.0], [12.5, 65.0], [12.6, 66.0], [12.7, 66.0], [12.8, 66.0], [12.9, 66.0], [13.0, 66.0], [13.1, 66.0], [13.2, 66.0], [13.3, 67.0], [13.4, 67.0], [13.5, 67.0], [13.6, 67.0], [13.7, 67.0], [13.8, 67.0], [13.9, 68.0], [14.0, 68.0], [14.1, 68.0], [14.2, 69.0], [14.3, 69.0], [14.4, 69.0], [14.5, 69.0], [14.6, 69.0], [14.7, 70.0], [14.8, 70.0], [14.9, 70.0], [15.0, 71.0], [15.1, 71.0], [15.2, 71.0], [15.3, 71.0], [15.4, 71.0], [15.5, 71.0], [15.6, 72.0], [15.7, 73.0], [15.8, 73.0], [15.9, 73.0], [16.0, 73.0], [16.1, 73.0], [16.2, 74.0], [16.3, 74.0], [16.4, 74.0], [16.5, 74.0], [16.6, 75.0], [16.7, 75.0], [16.8, 75.0], [16.9, 76.0], [17.0, 76.0], [17.1, 76.0], [17.2, 77.0], [17.3, 77.0], [17.4, 77.0], [17.5, 78.0], [17.6, 78.0], [17.7, 78.0], [17.8, 78.0], [17.9, 78.0], [18.0, 78.0], [18.1, 78.0], [18.2, 78.0], [18.3, 78.0], [18.4, 79.0], [18.5, 79.0], [18.6, 79.0], [18.7, 79.0], [18.8, 79.0], [18.9, 79.0], [19.0, 80.0], [19.1, 80.0], [19.2, 80.0], [19.3, 80.0], [19.4, 80.0], [19.5, 80.0], [19.6, 80.0], [19.7, 81.0], [19.8, 81.0], [19.9, 82.0], [20.0, 82.0], [20.1, 82.0], [20.2, 82.0], [20.3, 83.0], [20.4, 83.0], [20.5, 83.0], [20.6, 83.0], [20.7, 83.0], [20.8, 84.0], [20.9, 84.0], [21.0, 84.0], [21.1, 84.0], [21.2, 84.0], [21.3, 84.0], [21.4, 84.0], [21.5, 84.0], [21.6, 84.0], [21.7, 84.0], [21.8, 84.0], [21.9, 84.0], [22.0, 84.0], [22.1, 85.0], [22.2, 85.0], [22.3, 85.0], [22.4, 85.0], [22.5, 86.0], [22.6, 86.0], [22.7, 86.0], [22.8, 86.0], [22.9, 86.0], [23.0, 86.0], [23.1, 86.0], [23.2, 87.0], [23.3, 87.0], [23.4, 87.0], [23.5, 87.0], [23.6, 87.0], [23.7, 87.0], [23.8, 87.0], [23.9, 87.0], [24.0, 88.0], [24.1, 88.0], [24.2, 88.0], [24.3, 88.0], [24.4, 88.0], [24.5, 89.0], [24.6, 89.0], [24.7, 89.0], [24.8, 89.0], [24.9, 89.0], [25.0, 90.0], [25.1, 90.0], [25.2, 90.0], [25.3, 90.0], [25.4, 90.0], [25.5, 90.0], [25.6, 91.0], [25.7, 91.0], [25.8, 91.0], [25.9, 91.0], [26.0, 91.0], [26.1, 91.0], [26.2, 92.0], [26.3, 92.0], [26.4, 92.0], [26.5, 92.0], [26.6, 92.0], [26.7, 92.0], [26.8, 92.0], [26.9, 92.0], [27.0, 92.0], [27.1, 92.0], [27.2, 93.0], [27.3, 93.0], [27.4, 93.0], [27.5, 93.0], [27.6, 93.0], [27.7, 94.0], [27.8, 94.0], [27.9, 94.0], [28.0, 94.0], [28.1, 94.0], [28.2, 94.0], [28.3, 95.0], [28.4, 95.0], [28.5, 95.0], [28.6, 95.0], [28.7, 95.0], [28.8, 95.0], [28.9, 96.0], [29.0, 96.0], [29.1, 96.0], [29.2, 96.0], [29.3, 96.0], [29.4, 96.0], [29.5, 96.0], [29.6, 96.0], [29.7, 96.0], [29.8, 97.0], [29.9, 97.0], [30.0, 97.0], [30.1, 97.0], [30.2, 98.0], [30.3, 98.0], [30.4, 98.0], [30.5, 98.0], [30.6, 98.0], [30.7, 99.0], [30.8, 99.0], [30.9, 99.0], [31.0, 99.0], [31.1, 99.0], [31.2, 99.0], [31.3, 100.0], [31.4, 100.0], [31.5, 100.0], [31.6, 100.0], [31.7, 100.0], [31.8, 100.0], [31.9, 100.0], [32.0, 100.0], [32.1, 101.0], [32.2, 101.0], [32.3, 101.0], [32.4, 101.0], [32.5, 101.0], [32.6, 101.0], [32.7, 101.0], [32.8, 101.0], [32.9, 102.0], [33.0, 102.0], [33.1, 102.0], [33.2, 102.0], [33.3, 102.0], [33.4, 102.0], [33.5, 102.0], [33.6, 102.0], [33.7, 102.0], [33.8, 102.0], [33.9, 102.0], [34.0, 102.0], [34.1, 102.0], [34.2, 103.0], [34.3, 103.0], [34.4, 104.0], [34.5, 104.0], [34.6, 105.0], [34.7, 105.0], [34.8, 105.0], [34.9, 105.0], [35.0, 105.0], [35.1, 105.0], [35.2, 105.0], [35.3, 105.0], [35.4, 105.0], [35.5, 105.0], [35.6, 106.0], [35.7, 106.0], [35.8, 106.0], [35.9, 106.0], [36.0, 106.0], [36.1, 107.0], [36.2, 107.0], [36.3, 107.0], [36.4, 107.0], [36.5, 108.0], [36.6, 108.0], [36.7, 108.0], [36.8, 109.0], [36.9, 109.0], [37.0, 109.0], [37.1, 109.0], [37.2, 109.0], [37.3, 109.0], [37.4, 109.0], [37.5, 110.0], [37.6, 110.0], [37.7, 110.0], [37.8, 110.0], [37.9, 110.0], [38.0, 110.0], [38.1, 110.0], [38.2, 110.0], [38.3, 111.0], [38.4, 111.0], [38.5, 111.0], [38.6, 111.0], [38.7, 111.0], [38.8, 111.0], [38.9, 112.0], [39.0, 112.0], [39.1, 112.0], [39.2, 112.0], [39.3, 112.0], [39.4, 113.0], [39.5, 113.0], [39.6, 113.0], [39.7, 113.0], [39.8, 113.0], [39.9, 114.0], [40.0, 114.0], [40.1, 115.0], [40.2, 115.0], [40.3, 115.0], [40.4, 116.0], [40.5, 116.0], [40.6, 116.0], [40.7, 116.0], [40.8, 116.0], [40.9, 116.0], [41.0, 116.0], [41.1, 117.0], [41.2, 117.0], [41.3, 117.0], [41.4, 117.0], [41.5, 117.0], [41.6, 117.0], [41.7, 118.0], [41.8, 118.0], [41.9, 118.0], [42.0, 118.0], [42.1, 118.0], [42.2, 118.0], [42.3, 119.0], [42.4, 119.0], [42.5, 119.0], [42.6, 119.0], [42.7, 119.0], [42.8, 120.0], [42.9, 120.0], [43.0, 120.0], [43.1, 120.0], [43.2, 120.0], [43.3, 120.0], [43.4, 120.0], [43.5, 120.0], [43.6, 120.0], [43.7, 120.0], [43.8, 120.0], [43.9, 121.0], [44.0, 121.0], [44.1, 121.0], [44.2, 121.0], [44.3, 121.0], [44.4, 122.0], [44.5, 122.0], [44.6, 122.0], [44.7, 122.0], [44.8, 122.0], [44.9, 122.0], [45.0, 122.0], [45.1, 122.0], [45.2, 122.0], [45.3, 122.0], [45.4, 123.0], [45.5, 123.0], [45.6, 123.0], [45.7, 123.0], [45.8, 123.0], [45.9, 123.0], [46.0, 123.0], [46.1, 123.0], [46.2, 123.0], [46.3, 123.0], [46.4, 123.0], [46.5, 124.0], [46.6, 124.0], [46.7, 125.0], [46.8, 125.0], [46.9, 126.0], [47.0, 126.0], [47.1, 126.0], [47.2, 126.0], [47.3, 126.0], [47.4, 126.0], [47.5, 126.0], [47.6, 126.0], [47.7, 126.0], [47.8, 126.0], [47.9, 126.0], [48.0, 127.0], [48.1, 127.0], [48.2, 127.0], [48.3, 127.0], [48.4, 127.0], [48.5, 127.0], [48.6, 127.0], [48.7, 127.0], [48.8, 128.0], [48.9, 128.0], [49.0, 128.0], [49.1, 128.0], [49.2, 128.0], [49.3, 128.0], [49.4, 128.0], [49.5, 128.0], [49.6, 128.0], [49.7, 129.0], [49.8, 129.0], [49.9, 129.0], [50.0, 129.0], [50.1, 129.0], [50.2, 129.0], [50.3, 129.0], [50.4, 129.0], [50.5, 129.0], [50.6, 129.0], [50.7, 130.0], [50.8, 130.0], [50.9, 130.0], [51.0, 130.0], [51.1, 130.0], [51.2, 130.0], [51.3, 130.0], [51.4, 131.0], [51.5, 131.0], [51.6, 131.0], [51.7, 131.0], [51.8, 131.0], [51.9, 132.0], [52.0, 132.0], [52.1, 132.0], [52.2, 132.0], [52.3, 132.0], [52.4, 132.0], [52.5, 132.0], [52.6, 133.0], [52.7, 133.0], [52.8, 133.0], [52.9, 133.0], [53.0, 133.0], [53.1, 134.0], [53.2, 134.0], [53.3, 134.0], [53.4, 134.0], [53.5, 134.0], [53.6, 134.0], [53.7, 134.0], [53.8, 135.0], [53.9, 135.0], [54.0, 135.0], [54.1, 136.0], [54.2, 136.0], [54.3, 136.0], [54.4, 136.0], [54.5, 136.0], [54.6, 137.0], [54.7, 137.0], [54.8, 137.0], [54.9, 138.0], [55.0, 138.0], [55.1, 138.0], [55.2, 138.0], [55.3, 138.0], [55.4, 139.0], [55.5, 139.0], [55.6, 139.0], [55.7, 139.0], [55.8, 140.0], [55.9, 140.0], [56.0, 140.0], [56.1, 140.0], [56.2, 140.0], [56.3, 140.0], [56.4, 140.0], [56.5, 141.0], [56.6, 141.0], [56.7, 142.0], [56.8, 142.0], [56.9, 142.0], [57.0, 142.0], [57.1, 142.0], [57.2, 142.0], [57.3, 142.0], [57.4, 143.0], [57.5, 143.0], [57.6, 143.0], [57.7, 143.0], [57.8, 143.0], [57.9, 143.0], [58.0, 143.0], [58.1, 144.0], [58.2, 144.0], [58.3, 144.0], [58.4, 144.0], [58.5, 144.0], [58.6, 144.0], [58.7, 145.0], [58.8, 145.0], [58.9, 145.0], [59.0, 145.0], [59.1, 145.0], [59.2, 146.0], [59.3, 146.0], [59.4, 146.0], [59.5, 146.0], [59.6, 146.0], [59.7, 146.0], [59.8, 147.0], [59.9, 147.0], [60.0, 147.0], [60.1, 148.0], [60.2, 148.0], [60.3, 149.0], [60.4, 149.0], [60.5, 149.0], [60.6, 149.0], [60.7, 149.0], [60.8, 149.0], [60.9, 150.0], [61.0, 150.0], [61.1, 150.0], [61.2, 150.0], [61.3, 150.0], [61.4, 150.0], [61.5, 151.0], [61.6, 151.0], [61.7, 151.0], [61.8, 151.0], [61.9, 151.0], [62.0, 151.0], [62.1, 151.0], [62.2, 152.0], [62.3, 152.0], [62.4, 152.0], [62.5, 152.0], [62.6, 152.0], [62.7, 152.0], [62.8, 152.0], [62.9, 152.0], [63.0, 152.0], [63.1, 152.0], [63.2, 152.0], [63.3, 153.0], [63.4, 153.0], [63.5, 154.0], [63.6, 154.0], [63.7, 154.0], [63.8, 154.0], [63.9, 155.0], [64.0, 155.0], [64.1, 155.0], [64.2, 155.0], [64.3, 155.0], [64.4, 156.0], [64.5, 157.0], [64.6, 157.0], [64.7, 157.0], [64.8, 158.0], [64.9, 158.0], [65.0, 158.0], [65.1, 159.0], [65.2, 159.0], [65.3, 159.0], [65.4, 159.0], [65.5, 159.0], [65.6, 159.0], [65.7, 159.0], [65.8, 159.0], [65.9, 160.0], [66.0, 160.0], [66.1, 160.0], [66.2, 161.0], [66.3, 161.0], [66.4, 161.0], [66.5, 161.0], [66.6, 162.0], [66.7, 162.0], [66.8, 162.0], [66.9, 163.0], [67.0, 163.0], [67.1, 163.0], [67.2, 163.0], [67.3, 163.0], [67.4, 163.0], [67.5, 164.0], [67.6, 164.0], [67.7, 164.0], [67.8, 164.0], [67.9, 165.0], [68.0, 166.0], [68.1, 166.0], [68.2, 166.0], [68.3, 166.0], [68.4, 166.0], [68.5, 166.0], [68.6, 166.0], [68.7, 166.0], [68.8, 167.0], [68.9, 168.0], [69.0, 168.0], [69.1, 168.0], [69.2, 168.0], [69.3, 168.0], [69.4, 168.0], [69.5, 170.0], [69.6, 170.0], [69.7, 170.0], [69.8, 170.0], [69.9, 171.0], [70.0, 171.0], [70.1, 171.0], [70.2, 172.0], [70.3, 172.0], [70.4, 172.0], [70.5, 173.0], [70.6, 173.0], [70.7, 173.0], [70.8, 174.0], [70.9, 174.0], [71.0, 174.0], [71.1, 175.0], [71.2, 175.0], [71.3, 175.0], [71.4, 176.0], [71.5, 176.0], [71.6, 176.0], [71.7, 176.0], [71.8, 176.0], [71.9, 176.0], [72.0, 176.0], [72.1, 177.0], [72.2, 177.0], [72.3, 178.0], [72.4, 179.0], [72.5, 179.0], [72.6, 179.0], [72.7, 179.0], [72.8, 179.0], [72.9, 179.0], [73.0, 180.0], [73.1, 180.0], [73.2, 180.0], [73.3, 180.0], [73.4, 180.0], [73.5, 180.0], [73.6, 181.0], [73.7, 181.0], [73.8, 182.0], [73.9, 183.0], [74.0, 183.0], [74.1, 183.0], [74.2, 183.0], [74.3, 185.0], [74.4, 185.0], [74.5, 185.0], [74.6, 185.0], [74.7, 185.0], [74.8, 185.0], [74.9, 186.0], [75.0, 186.0], [75.1, 186.0], [75.2, 186.0], [75.3, 186.0], [75.4, 187.0], [75.5, 187.0], [75.6, 187.0], [75.7, 188.0], [75.8, 188.0], [75.9, 188.0], [76.0, 189.0], [76.1, 189.0], [76.2, 189.0], [76.3, 190.0], [76.4, 190.0], [76.5, 191.0], [76.6, 191.0], [76.7, 192.0], [76.8, 192.0], [76.9, 193.0], [77.0, 193.0], [77.1, 195.0], [77.2, 195.0], [77.3, 196.0], [77.4, 197.0], [77.5, 197.0], [77.6, 197.0], [77.7, 197.0], [77.8, 198.0], [77.9, 199.0], [78.0, 199.0], [78.1, 199.0], [78.2, 200.0], [78.3, 200.0], [78.4, 200.0], [78.5, 201.0], [78.6, 201.0], [78.7, 201.0], [78.8, 201.0], [78.9, 201.0], [79.0, 202.0], [79.1, 204.0], [79.2, 204.0], [79.3, 204.0], [79.4, 205.0], [79.5, 205.0], [79.6, 206.0], [79.7, 206.0], [79.8, 207.0], [79.9, 207.0], [80.0, 207.0], [80.1, 208.0], [80.2, 208.0], [80.3, 208.0], [80.4, 209.0], [80.5, 210.0], [80.6, 210.0], [80.7, 210.0], [80.8, 210.0], [80.9, 210.0], [81.0, 213.0], [81.1, 213.0], [81.2, 213.0], [81.3, 214.0], [81.4, 214.0], [81.5, 216.0], [81.6, 217.0], [81.7, 217.0], [81.8, 219.0], [81.9, 219.0], [82.0, 220.0], [82.1, 222.0], [82.2, 222.0], [82.3, 222.0], [82.4, 223.0], [82.5, 223.0], [82.6, 225.0], [82.7, 226.0], [82.8, 227.0], [82.9, 228.0], [83.0, 228.0], [83.1, 228.0], [83.2, 228.0], [83.3, 229.0], [83.4, 229.0], [83.5, 229.0], [83.6, 229.0], [83.7, 231.0], [83.8, 231.0], [83.9, 233.0], [84.0, 234.0], [84.1, 234.0], [84.2, 234.0], [84.3, 234.0], [84.4, 237.0], [84.5, 237.0], [84.6, 238.0], [84.7, 238.0], [84.8, 238.0], [84.9, 239.0], [85.0, 239.0], [85.1, 239.0], [85.2, 239.0], [85.3, 239.0], [85.4, 240.0], [85.5, 241.0], [85.6, 241.0], [85.7, 241.0], [85.8, 241.0], [85.9, 242.0], [86.0, 242.0], [86.1, 247.0], [86.2, 248.0], [86.3, 248.0], [86.4, 248.0], [86.5, 248.0], [86.6, 248.0], [86.7, 248.0], [86.8, 250.0], [86.9, 250.0], [87.0, 251.0], [87.1, 253.0], [87.2, 253.0], [87.3, 254.0], [87.4, 254.0], [87.5, 254.0], [87.6, 255.0], [87.7, 258.0], [87.8, 259.0], [87.9, 260.0], [88.0, 260.0], [88.1, 262.0], [88.2, 263.0], [88.3, 263.0], [88.4, 265.0], [88.5, 265.0], [88.6, 266.0], [88.7, 267.0], [88.8, 268.0], [88.9, 268.0], [89.0, 271.0], [89.1, 271.0], [89.2, 271.0], [89.3, 274.0], [89.4, 275.0], [89.5, 278.0], [89.6, 278.0], [89.7, 278.0], [89.8, 280.0], [89.9, 280.0], [90.0, 283.0], [90.1, 285.0], [90.2, 285.0], [90.3, 285.0], [90.4, 287.0], [90.5, 289.0], [90.6, 290.0], [90.7, 290.0], [90.8, 291.0], [90.9, 291.0], [91.0, 291.0], [91.1, 292.0], [91.2, 298.0], [91.3, 298.0], [91.4, 299.0], [91.5, 300.0], [91.6, 300.0], [91.7, 302.0], [91.8, 302.0], [91.9, 305.0], [92.0, 308.0], [92.1, 311.0], [92.2, 313.0], [92.3, 315.0], [92.4, 315.0], [92.5, 316.0], [92.6, 321.0], [92.7, 325.0], [92.8, 326.0], [92.9, 326.0], [93.0, 329.0], [93.1, 330.0], [93.2, 331.0], [93.3, 335.0], [93.4, 337.0], [93.5, 337.0], [93.6, 338.0], [93.7, 338.0], [93.8, 340.0], [93.9, 343.0], [94.0, 343.0], [94.1, 345.0], [94.2, 347.0], [94.3, 348.0], [94.4, 349.0], [94.5, 351.0], [94.6, 351.0], [94.7, 351.0], [94.8, 352.0], [94.9, 352.0], [95.0, 355.0], [95.1, 355.0], [95.2, 356.0], [95.3, 357.0], [95.4, 357.0], [95.5, 367.0], [95.6, 370.0], [95.7, 370.0], [95.8, 370.0], [95.9, 371.0], [96.0, 378.0], [96.1, 405.0], [96.2, 405.0], [96.3, 407.0], [96.4, 409.0], [96.5, 411.0], [96.6, 423.0], [96.7, 432.0], [96.8, 432.0], [96.9, 442.0], [97.0, 444.0], [97.1, 446.0], [97.2, 448.0], [97.3, 448.0], [97.4, 448.0], [97.5, 456.0], [97.6, 480.0], [97.7, 481.0], [97.8, 489.0], [97.9, 489.0], [98.0, 494.0], [98.1, 504.0], [98.2, 508.0], [98.3, 509.0], [98.4, 509.0], [98.5, 522.0], [98.6, 534.0], [98.7, 542.0], [98.8, 565.0], [98.9, 569.0], [99.0, 569.0], [99.1, 678.0], [99.2, 707.0], [99.3, 731.0], [99.4, 785.0], [99.5, 785.0], [99.6, 4274.0], [99.7, 4346.0], [99.8, 5558.0], [99.9, 8321.0], [100.0, 8321.0]], "isOverall": false, "label": "SubmitTaskDetail", "isController": false}, {"data": [[0.0, 7.0], [0.1, 7.0], [0.2, 8.0], [0.3, 8.0], [0.4, 8.0], [0.5, 8.0], [0.6, 8.0], [0.7, 8.0], [0.8, 9.0], [0.9, 9.0], [1.0, 10.0], [1.1, 10.0], [1.2, 10.0], [1.3, 10.0], [1.4, 10.0], [1.5, 10.0], [1.6, 10.0], [1.7, 10.0], [1.8, 10.0], [1.9, 10.0], [2.0, 10.0], [2.1, 10.0], [2.2, 10.0], [2.3, 10.0], [2.4, 10.0], [2.5, 10.0], [2.6, 10.0], [2.7, 11.0], [2.8, 11.0], [2.9, 11.0], [3.0, 11.0], [3.1, 11.0], [3.2, 11.0], [3.3, 11.0], [3.4, 11.0], [3.5, 11.0], [3.6, 11.0], [3.7, 11.0], [3.8, 11.0], [3.9, 11.0], [4.0, 11.0], [4.1, 11.0], [4.2, 11.0], [4.3, 11.0], [4.4, 11.0], [4.5, 11.0], [4.6, 11.0], [4.7, 12.0], [4.8, 12.0], [4.9, 12.0], [5.0, 12.0], [5.1, 12.0], [5.2, 12.0], [5.3, 12.0], [5.4, 12.0], [5.5, 12.0], [5.6, 12.0], [5.7, 12.0], [5.8, 12.0], [5.9, 12.0], [6.0, 12.0], [6.1, 12.0], [6.2, 12.0], [6.3, 12.0], [6.4, 12.0], [6.5, 12.0], [6.6, 12.0], [6.7, 12.0], [6.8, 12.0], [6.9, 12.0], [7.0, 12.0], [7.1, 12.0], [7.2, 13.0], [7.3, 13.0], [7.4, 13.0], [7.5, 13.0], [7.6, 13.0], [7.7, 13.0], [7.8, 13.0], [7.9, 13.0], [8.0, 13.0], [8.1, 13.0], [8.2, 13.0], [8.3, 13.0], [8.4, 13.0], [8.5, 13.0], [8.6, 13.0], [8.7, 13.0], [8.8, 13.0], [8.9, 13.0], [9.0, 13.0], [9.1, 13.0], [9.2, 13.0], [9.3, 13.0], [9.4, 13.0], [9.5, 13.0], [9.6, 13.0], [9.7, 13.0], [9.8, 13.0], [9.9, 13.0], [10.0, 13.0], [10.1, 13.0], [10.2, 13.0], [10.3, 13.0], [10.4, 13.0], [10.5, 13.0], [10.6, 13.0], [10.7, 13.0], [10.8, 13.0], [10.9, 13.0], [11.0, 13.0], [11.1, 13.0], [11.2, 14.0], [11.3, 14.0], [11.4, 14.0], [11.5, 14.0], [11.6, 14.0], [11.7, 14.0], [11.8, 14.0], [11.9, 14.0], [12.0, 14.0], [12.1, 14.0], [12.2, 14.0], [12.3, 14.0], [12.4, 14.0], [12.5, 14.0], [12.6, 14.0], [12.7, 14.0], [12.8, 14.0], [12.9, 14.0], [13.0, 14.0], [13.1, 14.0], [13.2, 14.0], [13.3, 14.0], [13.4, 14.0], [13.5, 14.0], [13.6, 14.0], [13.7, 14.0], [13.8, 14.0], [13.9, 14.0], [14.0, 14.0], [14.1, 14.0], [14.2, 14.0], [14.3, 14.0], [14.4, 14.0], [14.5, 14.0], [14.6, 14.0], [14.7, 14.0], [14.8, 14.0], [14.9, 14.0], [15.0, 14.0], [15.1, 14.0], [15.2, 14.0], [15.3, 14.0], [15.4, 14.0], [15.5, 14.0], [15.6, 14.0], [15.7, 15.0], [15.8, 15.0], [15.9, 15.0], [16.0, 15.0], [16.1, 15.0], [16.2, 15.0], [16.3, 15.0], [16.4, 15.0], [16.5, 15.0], [16.6, 15.0], [16.7, 15.0], [16.8, 15.0], [16.9, 15.0], [17.0, 15.0], [17.1, 15.0], [17.2, 15.0], [17.3, 15.0], [17.4, 15.0], [17.5, 15.0], [17.6, 15.0], [17.7, 15.0], [17.8, 15.0], [17.9, 15.0], [18.0, 15.0], [18.1, 15.0], [18.2, 15.0], [18.3, 15.0], [18.4, 15.0], [18.5, 15.0], [18.6, 16.0], [18.7, 16.0], [18.8, 16.0], [18.9, 16.0], [19.0, 16.0], [19.1, 16.0], [19.2, 16.0], [19.3, 16.0], [19.4, 16.0], [19.5, 16.0], [19.6, 16.0], [19.7, 16.0], [19.8, 16.0], [19.9, 16.0], [20.0, 16.0], [20.1, 16.0], [20.2, 16.0], [20.3, 16.0], [20.4, 16.0], [20.5, 16.0], [20.6, 16.0], [20.7, 16.0], [20.8, 16.0], [20.9, 16.0], [21.0, 16.0], [21.1, 16.0], [21.2, 16.0], [21.3, 16.0], [21.4, 16.0], [21.5, 16.0], [21.6, 16.0], [21.7, 16.0], [21.8, 16.0], [21.9, 16.0], [22.0, 16.0], [22.1, 16.0], [22.2, 16.0], [22.3, 16.0], [22.4, 16.0], [22.5, 16.0], [22.6, 16.0], [22.7, 16.0], [22.8, 16.0], [22.9, 16.0], [23.0, 17.0], [23.1, 17.0], [23.2, 17.0], [23.3, 17.0], [23.4, 17.0], [23.5, 17.0], [23.6, 17.0], [23.7, 17.0], [23.8, 17.0], [23.9, 17.0], [24.0, 17.0], [24.1, 17.0], [24.2, 17.0], [24.3, 17.0], [24.4, 17.0], [24.5, 17.0], [24.6, 17.0], [24.7, 17.0], [24.8, 17.0], [24.9, 17.0], [25.0, 17.0], [25.1, 17.0], [25.2, 17.0], [25.3, 17.0], [25.4, 17.0], [25.5, 17.0], [25.6, 17.0], [25.7, 17.0], [25.8, 17.0], [25.9, 17.0], [26.0, 17.0], [26.1, 17.0], [26.2, 17.0], [26.3, 17.0], [26.4, 17.0], [26.5, 17.0], [26.6, 17.0], [26.7, 17.0], [26.8, 17.0], [26.9, 17.0], [27.0, 17.0], [27.1, 17.0], [27.2, 17.0], [27.3, 18.0], [27.4, 18.0], [27.5, 18.0], [27.6, 18.0], [27.7, 18.0], [27.8, 18.0], [27.9, 18.0], [28.0, 18.0], [28.1, 18.0], [28.2, 18.0], [28.3, 18.0], [28.4, 18.0], [28.5, 18.0], [28.6, 18.0], [28.7, 18.0], [28.8, 18.0], [28.9, 18.0], [29.0, 18.0], [29.1, 18.0], [29.2, 18.0], [29.3, 18.0], [29.4, 18.0], [29.5, 18.0], [29.6, 18.0], [29.7, 18.0], [29.8, 18.0], [29.9, 18.0], [30.0, 18.0], [30.1, 18.0], [30.2, 18.0], [30.3, 18.0], [30.4, 18.0], [30.5, 18.0], [30.6, 18.0], [30.7, 18.0], [30.8, 18.0], [30.9, 18.0], [31.0, 18.0], [31.1, 18.0], [31.2, 18.0], [31.3, 18.0], [31.4, 18.0], [31.5, 18.0], [31.6, 18.0], [31.7, 18.0], [31.8, 18.0], [31.9, 18.0], [32.0, 18.0], [32.1, 18.0], [32.2, 18.0], [32.3, 18.0], [32.4, 18.0], [32.5, 19.0], [32.6, 19.0], [32.7, 19.0], [32.8, 19.0], [32.9, 19.0], [33.0, 19.0], [33.1, 19.0], [33.2, 19.0], [33.3, 19.0], [33.4, 19.0], [33.5, 19.0], [33.6, 19.0], [33.7, 19.0], [33.8, 19.0], [33.9, 19.0], [34.0, 19.0], [34.1, 19.0], [34.2, 19.0], [34.3, 19.0], [34.4, 19.0], [34.5, 19.0], [34.6, 19.0], [34.7, 19.0], [34.8, 19.0], [34.9, 19.0], [35.0, 19.0], [35.1, 19.0], [35.2, 19.0], [35.3, 19.0], [35.4, 19.0], [35.5, 19.0], [35.6, 19.0], [35.7, 19.0], [35.8, 19.0], [35.9, 19.0], [36.0, 19.0], [36.1, 19.0], [36.2, 19.0], [36.3, 19.0], [36.4, 19.0], [36.5, 19.0], [36.6, 19.0], [36.7, 19.0], [36.8, 19.0], [36.9, 19.0], [37.0, 19.0], [37.1, 19.0], [37.2, 19.0], [37.3, 19.0], [37.4, 19.0], [37.5, 19.0], [37.6, 19.0], [37.7, 19.0], [37.8, 19.0], [37.9, 19.0], [38.0, 19.0], [38.1, 19.0], [38.2, 19.0], [38.3, 19.0], [38.4, 19.0], [38.5, 19.0], [38.6, 19.0], [38.7, 19.0], [38.8, 19.0], [38.9, 19.0], [39.0, 19.0], [39.1, 19.0], [39.2, 19.0], [39.3, 19.0], [39.4, 19.0], [39.5, 20.0], [39.6, 20.0], [39.7, 20.0], [39.8, 20.0], [39.9, 20.0], [40.0, 20.0], [40.1, 20.0], [40.2, 20.0], [40.3, 20.0], [40.4, 20.0], [40.5, 20.0], [40.6, 20.0], [40.7, 20.0], [40.8, 20.0], [40.9, 20.0], [41.0, 20.0], [41.1, 20.0], [41.2, 20.0], [41.3, 20.0], [41.4, 20.0], [41.5, 20.0], [41.6, 20.0], [41.7, 20.0], [41.8, 20.0], [41.9, 20.0], [42.0, 20.0], [42.1, 20.0], [42.2, 20.0], [42.3, 20.0], [42.4, 20.0], [42.5, 20.0], [42.6, 20.0], [42.7, 20.0], [42.8, 20.0], [42.9, 20.0], [43.0, 20.0], [43.1, 20.0], [43.2, 20.0], [43.3, 20.0], [43.4, 20.0], [43.5, 20.0], [43.6, 20.0], [43.7, 20.0], [43.8, 20.0], [43.9, 20.0], [44.0, 20.0], [44.1, 20.0], [44.2, 20.0], [44.3, 20.0], [44.4, 21.0], [44.5, 21.0], [44.6, 21.0], [44.7, 21.0], [44.8, 21.0], [44.9, 21.0], [45.0, 21.0], [45.1, 21.0], [45.2, 21.0], [45.3, 21.0], [45.4, 21.0], [45.5, 21.0], [45.6, 21.0], [45.7, 21.0], [45.8, 21.0], [45.9, 21.0], [46.0, 21.0], [46.1, 21.0], [46.2, 21.0], [46.3, 21.0], [46.4, 21.0], [46.5, 21.0], [46.6, 21.0], [46.7, 21.0], [46.8, 21.0], [46.9, 21.0], [47.0, 21.0], [47.1, 21.0], [47.2, 21.0], [47.3, 21.0], [47.4, 21.0], [47.5, 21.0], [47.6, 21.0], [47.7, 21.0], [47.8, 21.0], [47.9, 21.0], [48.0, 21.0], [48.1, 21.0], [48.2, 21.0], [48.3, 21.0], [48.4, 21.0], [48.5, 21.0], [48.6, 21.0], [48.7, 21.0], [48.8, 21.0], [48.9, 21.0], [49.0, 21.0], [49.1, 21.0], [49.2, 21.0], [49.3, 21.0], [49.4, 21.0], [49.5, 21.0], [49.6, 21.0], [49.7, 21.0], [49.8, 21.0], [49.9, 21.0], [50.0, 21.0], [50.1, 21.0], [50.2, 22.0], [50.3, 22.0], [50.4, 22.0], [50.5, 22.0], [50.6, 22.0], [50.7, 22.0], [50.8, 22.0], [50.9, 22.0], [51.0, 22.0], [51.1, 22.0], [51.2, 22.0], [51.3, 22.0], [51.4, 22.0], [51.5, 22.0], [51.6, 22.0], [51.7, 22.0], [51.8, 22.0], [51.9, 22.0], [52.0, 22.0], [52.1, 22.0], [52.2, 22.0], [52.3, 22.0], [52.4, 22.0], [52.5, 22.0], [52.6, 22.0], [52.7, 22.0], [52.8, 22.0], [52.9, 22.0], [53.0, 22.0], [53.1, 22.0], [53.2, 22.0], [53.3, 22.0], [53.4, 22.0], [53.5, 22.0], [53.6, 22.0], [53.7, 22.0], [53.8, 22.0], [53.9, 23.0], [54.0, 23.0], [54.1, 23.0], [54.2, 23.0], [54.3, 23.0], [54.4, 23.0], [54.5, 23.0], [54.6, 23.0], [54.7, 23.0], [54.8, 23.0], [54.9, 23.0], [55.0, 23.0], [55.1, 23.0], [55.2, 23.0], [55.3, 23.0], [55.4, 23.0], [55.5, 23.0], [55.6, 23.0], [55.7, 23.0], [55.8, 23.0], [55.9, 23.0], [56.0, 23.0], [56.1, 23.0], [56.2, 23.0], [56.3, 23.0], [56.4, 23.0], [56.5, 23.0], [56.6, 23.0], [56.7, 23.0], [56.8, 24.0], [56.9, 24.0], [57.0, 24.0], [57.1, 24.0], [57.2, 24.0], [57.3, 24.0], [57.4, 24.0], [57.5, 24.0], [57.6, 24.0], [57.7, 24.0], [57.8, 24.0], [57.9, 24.0], [58.0, 24.0], [58.1, 24.0], [58.2, 24.0], [58.3, 24.0], [58.4, 24.0], [58.5, 24.0], [58.6, 24.0], [58.7, 24.0], [58.8, 24.0], [58.9, 24.0], [59.0, 24.0], [59.1, 24.0], [59.2, 25.0], [59.3, 25.0], [59.4, 25.0], [59.5, 25.0], [59.6, 25.0], [59.7, 25.0], [59.8, 25.0], [59.9, 25.0], [60.0, 25.0], [60.1, 25.0], [60.2, 25.0], [60.3, 25.0], [60.4, 25.0], [60.5, 25.0], [60.6, 25.0], [60.7, 25.0], [60.8, 25.0], [60.9, 25.0], [61.0, 25.0], [61.1, 25.0], [61.2, 26.0], [61.3, 26.0], [61.4, 26.0], [61.5, 26.0], [61.6, 26.0], [61.7, 26.0], [61.8, 26.0], [61.9, 26.0], [62.0, 26.0], [62.1, 26.0], [62.2, 26.0], [62.3, 26.0], [62.4, 26.0], [62.5, 26.0], [62.6, 26.0], [62.7, 26.0], [62.8, 26.0], [62.9, 26.0], [63.0, 26.0], [63.1, 26.0], [63.2, 27.0], [63.3, 27.0], [63.4, 27.0], [63.5, 27.0], [63.6, 27.0], [63.7, 27.0], [63.8, 27.0], [63.9, 27.0], [64.0, 27.0], [64.1, 27.0], [64.2, 27.0], [64.3, 27.0], [64.4, 27.0], [64.5, 27.0], [64.6, 27.0], [64.7, 27.0], [64.8, 27.0], [64.9, 27.0], [65.0, 27.0], [65.1, 27.0], [65.2, 27.0], [65.3, 27.0], [65.4, 27.0], [65.5, 27.0], [65.6, 27.0], [65.7, 27.0], [65.8, 27.0], [65.9, 27.0], [66.0, 27.0], [66.1, 27.0], [66.2, 27.0], [66.3, 28.0], [66.4, 28.0], [66.5, 28.0], [66.6, 28.0], [66.7, 28.0], [66.8, 28.0], [66.9, 28.0], [67.0, 28.0], [67.1, 28.0], [67.2, 28.0], [67.3, 28.0], [67.4, 28.0], [67.5, 28.0], [67.6, 28.0], [67.7, 28.0], [67.8, 28.0], [67.9, 28.0], [68.0, 28.0], [68.1, 28.0], [68.2, 28.0], [68.3, 28.0], [68.4, 28.0], [68.5, 28.0], [68.6, 28.0], [68.7, 28.0], [68.8, 28.0], [68.9, 28.0], [69.0, 28.0], [69.1, 28.0], [69.2, 28.0], [69.3, 29.0], [69.4, 29.0], [69.5, 29.0], [69.6, 29.0], [69.7, 29.0], [69.8, 29.0], [69.9, 29.0], [70.0, 29.0], [70.1, 29.0], [70.2, 29.0], [70.3, 29.0], [70.4, 29.0], [70.5, 29.0], [70.6, 30.0], [70.7, 30.0], [70.8, 30.0], [70.9, 30.0], [71.0, 30.0], [71.1, 30.0], [71.2, 30.0], [71.3, 30.0], [71.4, 30.0], [71.5, 30.0], [71.6, 30.0], [71.7, 30.0], [71.8, 30.0], [71.9, 30.0], [72.0, 30.0], [72.1, 30.0], [72.2, 30.0], [72.3, 30.0], [72.4, 30.0], [72.5, 30.0], [72.6, 30.0], [72.7, 31.0], [72.8, 31.0], [72.9, 31.0], [73.0, 31.0], [73.1, 31.0], [73.2, 31.0], [73.3, 31.0], [73.4, 31.0], [73.5, 31.0], [73.6, 31.0], [73.7, 31.0], [73.8, 31.0], [73.9, 31.0], [74.0, 31.0], [74.1, 31.0], [74.2, 31.0], [74.3, 31.0], [74.4, 31.0], [74.5, 31.0], [74.6, 31.0], [74.7, 31.0], [74.8, 31.0], [74.9, 31.0], [75.0, 31.0], [75.1, 31.0], [75.2, 31.0], [75.3, 31.0], [75.4, 31.0], [75.5, 32.0], [75.6, 32.0], [75.7, 32.0], [75.8, 32.0], [75.9, 33.0], [76.0, 33.0], [76.1, 33.0], [76.2, 33.0], [76.3, 33.0], [76.4, 33.0], [76.5, 33.0], [76.6, 33.0], [76.7, 33.0], [76.8, 33.0], [76.9, 33.0], [77.0, 34.0], [77.1, 34.0], [77.2, 34.0], [77.3, 34.0], [77.4, 34.0], [77.5, 34.0], [77.6, 34.0], [77.7, 34.0], [77.8, 34.0], [77.9, 34.0], [78.0, 34.0], [78.1, 34.0], [78.2, 35.0], [78.3, 35.0], [78.4, 35.0], [78.5, 35.0], [78.6, 35.0], [78.7, 35.0], [78.8, 36.0], [78.9, 36.0], [79.0, 36.0], [79.1, 36.0], [79.2, 36.0], [79.3, 36.0], [79.4, 36.0], [79.5, 36.0], [79.6, 37.0], [79.7, 37.0], [79.8, 37.0], [79.9, 37.0], [80.0, 37.0], [80.1, 37.0], [80.2, 37.0], [80.3, 37.0], [80.4, 37.0], [80.5, 38.0], [80.6, 38.0], [80.7, 38.0], [80.8, 38.0], [80.9, 39.0], [81.0, 39.0], [81.1, 39.0], [81.2, 39.0], [81.3, 39.0], [81.4, 39.0], [81.5, 39.0], [81.6, 39.0], [81.7, 39.0], [81.8, 39.0], [81.9, 40.0], [82.0, 40.0], [82.1, 40.0], [82.2, 41.0], [82.3, 41.0], [82.4, 41.0], [82.5, 41.0], [82.6, 41.0], [82.7, 41.0], [82.8, 42.0], [82.9, 42.0], [83.0, 42.0], [83.1, 42.0], [83.2, 42.0], [83.3, 43.0], [83.4, 43.0], [83.5, 43.0], [83.6, 43.0], [83.7, 43.0], [83.8, 44.0], [83.9, 44.0], [84.0, 44.0], [84.1, 45.0], [84.2, 45.0], [84.3, 45.0], [84.4, 45.0], [84.5, 45.0], [84.6, 45.0], [84.7, 45.0], [84.8, 45.0], [84.9, 46.0], [85.0, 46.0], [85.1, 46.0], [85.2, 46.0], [85.3, 46.0], [85.4, 46.0], [85.5, 47.0], [85.6, 47.0], [85.7, 47.0], [85.8, 47.0], [85.9, 47.0], [86.0, 47.0], [86.1, 47.0], [86.2, 48.0], [86.3, 48.0], [86.4, 48.0], [86.5, 48.0], [86.6, 48.0], [86.7, 48.0], [86.8, 49.0], [86.9, 49.0], [87.0, 50.0], [87.1, 50.0], [87.2, 50.0], [87.3, 50.0], [87.4, 50.0], [87.5, 50.0], [87.6, 50.0], [87.7, 51.0], [87.8, 51.0], [87.9, 52.0], [88.0, 52.0], [88.1, 52.0], [88.2, 52.0], [88.3, 53.0], [88.4, 53.0], [88.5, 54.0], [88.6, 54.0], [88.7, 56.0], [88.8, 56.0], [88.9, 56.0], [89.0, 56.0], [89.1, 56.0], [89.2, 57.0], [89.3, 57.0], [89.4, 57.0], [89.5, 58.0], [89.6, 59.0], [89.7, 59.0], [89.8, 60.0], [89.9, 60.0], [90.0, 61.0], [90.1, 61.0], [90.2, 62.0], [90.3, 62.0], [90.4, 62.0], [90.5, 63.0], [90.6, 64.0], [90.7, 64.0], [90.8, 66.0], [90.9, 67.0], [91.0, 67.0], [91.1, 67.0], [91.2, 67.0], [91.3, 68.0], [91.4, 69.0], [91.5, 69.0], [91.6, 69.0], [91.7, 70.0], [91.8, 72.0], [91.9, 72.0], [92.0, 73.0], [92.1, 73.0], [92.2, 74.0], [92.3, 76.0], [92.4, 76.0], [92.5, 76.0], [92.6, 77.0], [92.7, 77.0], [92.8, 77.0], [92.9, 77.0], [93.0, 80.0], [93.1, 80.0], [93.2, 81.0], [93.3, 81.0], [93.4, 83.0], [93.5, 84.0], [93.6, 84.0], [93.7, 86.0], [93.8, 86.0], [93.9, 87.0], [94.0, 88.0], [94.1, 88.0], [94.2, 88.0], [94.3, 89.0], [94.4, 89.0], [94.5, 92.0], [94.6, 93.0], [94.7, 94.0], [94.8, 94.0], [94.9, 95.0], [95.0, 95.0], [95.1, 97.0], [95.2, 101.0], [95.3, 101.0], [95.4, 102.0], [95.5, 102.0], [95.6, 103.0], [95.7, 107.0], [95.8, 110.0], [95.9, 116.0], [96.0, 121.0], [96.1, 121.0], [96.2, 121.0], [96.3, 129.0], [96.4, 129.0], [96.5, 133.0], [96.6, 135.0], [96.7, 135.0], [96.8, 135.0], [96.9, 145.0], [97.0, 147.0], [97.1, 150.0], [97.2, 150.0], [97.3, 150.0], [97.4, 163.0], [97.5, 165.0], [97.6, 166.0], [97.7, 170.0], [97.8, 170.0], [97.9, 173.0], [98.0, 175.0], [98.1, 177.0], [98.2, 191.0], [98.3, 202.0], [98.4, 202.0], [98.5, 203.0], [98.6, 226.0], [98.7, 296.0], [98.8, 360.0], [98.9, 360.0], [99.0, 374.0], [99.1, 484.0], [99.2, 499.0], [99.3, 637.0], [99.4, 683.0], [99.5, 683.0], [99.6, 1174.0], [99.7, 1764.0], [99.8, 2155.0], [99.9, 3148.0], [100.0, 3148.0]], "isOverall": false, "label": "GetProjectDetails", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 809.0, "series": [{"data": [[8200.0, 1.0], [8500.0, 3.0], [600.0, 51.0], [700.0, 32.0], [800.0, 40.0], [900.0, 31.0], [1000.0, 39.0], [1100.0, 34.0], [1200.0, 40.0], [1300.0, 44.0], [1400.0, 71.0], [1500.0, 48.0], [100.0, 9.0], [1600.0, 58.0], [1700.0, 38.0], [1800.0, 27.0], [1900.0, 18.0], [2000.0, 7.0], [2100.0, 11.0], [2200.0, 7.0], [2300.0, 6.0], [2400.0, 3.0], [2500.0, 2.0], [2600.0, 8.0], [2700.0, 6.0], [2800.0, 2.0], [2900.0, 2.0], [3100.0, 1.0], [200.0, 23.0], [4600.0, 1.0], [300.0, 42.0], [5200.0, 1.0], [5500.0, 1.0], [400.0, 54.0], [6600.0, 1.0], [6400.0, 1.0], [7800.0, 1.0], [500.0, 54.0]], "isOverall": false, "label": "GetTaskDetailList", "isController": false}, {"data": [[0.0, 809.0], [600.0, 2.0], [300.0, 1.0], [5300.0, 1.0], [3000.0, 1.0], [100.0, 6.0], [3600.0, 1.0], [500.0, 2.0]], "isOverall": false, "label": "GetUserDetails", "isController": false}, {"data": [[0.0, 806.0], [200.0, 3.0], [100.0, 7.0], [800.0, 1.0], [900.0, 1.0]], "isOverall": false, "label": "GetParentTaskList", "isController": false}, {"data": [[0.0, 256.0], [4300.0, 1.0], [4200.0, 1.0], [8300.0, 1.0], [300.0, 38.0], [600.0, 1.0], [5500.0, 1.0], [700.0, 3.0], [100.0, 383.0], [200.0, 109.0], [400.0, 16.0], [500.0, 8.0]], "isOverall": false, "label": "SubmitTaskDetail", "isController": false}, {"data": [[0.0, 783.0], [2100.0, 1.0], [1100.0, 1.0], [300.0, 2.0], [600.0, 2.0], [3100.0, 1.0], [100.0, 26.0], [200.0, 4.0], [400.0, 2.0], [1700.0, 1.0]], "isOverall": false, "label": "GetProjectDetails", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 8500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 264.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 3379.0, "series": [{"data": [[0.0, 3379.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 457.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 264.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 3.9599999999999995, "minX": 1.54696242E12, "maxY": 5.0, "series": [{"data": [[1.5469626E12, 5.0], [1.54696272E12, 5.0], [1.54696242E12, 3.9599999999999995], [1.54696254E12, 5.0], [1.54696248E12, 5.0], [1.54696266E12, 5.0]], "isOverall": false, "label": "ProjectManager", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.54696272E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 8.5, "minX": 2.0, "maxY": 1247.0221948212086, "series": [{"data": [[4.0, 256.25], [5.0, 1247.0221948212086], [3.0, 197.66666666666666]], "isOverall": false, "label": "GetTaskDetailList", "isController": false}, {"data": [[4.98777506112469, 1238.3288508557466]], "isOverall": false, "label": "GetTaskDetailList-Aggregated", "isController": false}, {"data": [[2.0, 9.0], [4.0, 12.666666666666666], [5.0, 28.147058823529406], [3.0, 13.5]], "isOverall": false, "label": "GetUserDetails", "isController": false}, {"data": [[4.984204131227211, 28.008505467800752]], "isOverall": false, "label": "GetUserDetails-Aggregated", "isController": false}, {"data": [[4.0, 8.5], [5.0, 12.764488286066586], [3.0, 9.333333333333334]], "isOverall": false, "label": "GetParentTaskList", "isController": false}, {"data": [[4.98777506112469, 12.731051344743266]], "isOverall": false, "label": "GetParentTaskList-Aggregated", "isController": false}, {"data": [[4.0, 176.66666666666666], [5.0, 180.82800982800987], [3.0, 133.0]], "isOverall": false, "label": "SubmitTaskDetail", "isController": false}, {"data": [[4.9938875305623505, 180.75427872860635]], "isOverall": false, "label": "SubmitTaskDetail-Aggregated", "isController": false}, {"data": [[2.0, 147.5], [4.0, 37.25], [5.0, 44.04785276073616], [3.0, 46.5]], "isOverall": false, "label": "GetProjectDetails", "isController": false}, {"data": [[4.982989064398544, 44.27217496962335]], "isOverall": false, "label": "GetProjectDetails-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 5.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 167.9, "minX": 1.54696242E12, "maxY": 459652.9166666667, "series": [{"data": [[1.5469626E12, 459652.9166666667], [1.54696272E12, 75544.81666666667], [1.54696242E12, 2885.483333333333], [1.54696254E12, 395201.7166666667], [1.54696248E12, 263077.6666666667], [1.54696266E12, 399976.25]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.5469626E12, 3026.0333333333333], [1.54696272E12, 375.2], [1.54696242E12, 167.9], [1.54696254E12, 3662.6666666666665], [1.54696248E12, 5235.8], [1.54696266E12, 2173.1666666666665]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.54696272E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 4.047619047619048, "minX": 1.54696242E12, "maxY": 2061.9834710743803, "series": [{"data": [[1.5469626E12, 1536.3117647058818], [1.54696272E12, 1603.4761904761906], [1.54696242E12, 285.3], [1.54696254E12, 1223.029268292682], [1.54696248E12, 738.9450171821306], [1.54696266E12, 2061.9834710743803]], "isOverall": false, "label": "GetTaskDetailList", "isController": false}, {"data": [[1.5469626E12, 15.520710059171599], [1.54696272E12, 4.190476190476191], [1.54696242E12, 12.0], [1.54696254E12, 8.980487804878049], [1.54696248E12, 41.5374149659864], [1.54696266E12, 50.35245901639347]], "isOverall": false, "label": "GetUserDetails", "isController": false}, {"data": [[1.5469626E12, 10.78823529411765], [1.54696272E12, 4.047619047619048], [1.54696242E12, 22.88888888888889], [1.54696254E12, 8.82926829268293], [1.54696248E12, 12.489726027397266], [1.54696266E12, 23.404958677685947]], "isOverall": false, "label": "GetParentTaskList", "isController": false}, {"data": [[1.5469626E12, 160.24852071005913], [1.54696272E12, 75.95238095238096], [1.54696242E12, 216.7142857142857], [1.54696254E12, 170.5560975609757], [1.54696248E12, 177.71768707482994], [1.54696266E12, 249.59016393442616]], "isOverall": false, "label": "SubmitTaskDetail", "isController": false}, {"data": [[1.5469626E12, 43.047337278106525], [1.54696272E12, 23.761904761904763], [1.54696242E12, 66.08333333333334], [1.54696254E12, 31.69268292682927], [1.54696248E12, 34.697278911564624], [1.54696266E12, 91.56557377049178]], "isOverall": false, "label": "GetProjectDetails", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.54696272E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 3.857142857142857, "minX": 1.54696242E12, "maxY": 2054.0661157024806, "series": [{"data": [[1.5469626E12, 1532.8058823529411], [1.54696272E12, 1599.4761904761904], [1.54696242E12, 279.59999999999997], [1.54696254E12, 1219.4048780487792], [1.54696248E12, 725.1477663230244], [1.54696266E12, 2054.0661157024806]], "isOverall": false, "label": "GetTaskDetailList", "isController": false}, {"data": [[1.5469626E12, 15.396449704142007], [1.54696272E12, 4.095238095238095], [1.54696242E12, 11.833333333333332], [1.54696254E12, 8.702439024390236], [1.54696248E12, 41.24149659863944], [1.54696266E12, 49.918032786885306]], "isOverall": false, "label": "GetUserDetails", "isController": false}, {"data": [[1.5469626E12, 10.476470588235296], [1.54696272E12, 3.857142857142857], [1.54696242E12, 22.11111111111111], [1.54696254E12, 8.629268292682921], [1.54696248E12, 12.01369863013698], [1.54696266E12, 23.19834710743802]], "isOverall": false, "label": "GetParentTaskList", "isController": false}, {"data": [[1.5469626E12, 160.04733727810643], [1.54696272E12, 75.90476190476191], [1.54696242E12, 216.42857142857142], [1.54696254E12, 170.47804878048782], [1.54696248E12, 177.54761904761898], [1.54696266E12, 249.5573770491803]], "isOverall": false, "label": "SubmitTaskDetail", "isController": false}, {"data": [[1.5469626E12, 42.68047337278106], [1.54696272E12, 23.619047619047617], [1.54696242E12, 65.91666666666667], [1.54696254E12, 31.41951219512196], [1.54696248E12, 34.544217687074806], [1.54696266E12, 91.33606557377054]], "isOverall": false, "label": "GetProjectDetails", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.54696272E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.54696242E12, "maxY": 18.25, "series": [{"data": [[1.5469626E12, 0.0], [1.54696272E12, 0.0], [1.54696242E12, 0.0], [1.54696254E12, 0.0], [1.54696248E12, 0.006872852233676974], [1.54696266E12, 0.0]], "isOverall": false, "label": "GetTaskDetailList", "isController": false}, {"data": [[1.5469626E12, 0.0], [1.54696272E12, 0.0], [1.54696242E12, 0.0], [1.54696254E12, 0.0], [1.54696248E12, 0.0], [1.54696266E12, 0.016393442622950824]], "isOverall": false, "label": "GetUserDetails", "isController": false}, {"data": [[1.5469626E12, 0.07058823529411766], [1.54696272E12, 0.0], [1.54696242E12, 0.0], [1.54696254E12, 0.0], [1.54696248E12, 0.0273972602739726], [1.54696266E12, 0.7272727272727273]], "isOverall": false, "label": "GetParentTaskList", "isController": false}, {"data": [[1.5469626E12, 0.0], [1.54696272E12, 0.0], [1.54696242E12, 0.0], [1.54696254E12, 0.0], [1.54696248E12, 0.0], [1.54696266E12, 0.040983606557377025]], "isOverall": false, "label": "SubmitTaskDetail", "isController": false}, {"data": [[1.5469626E12, 0.6272189349112425], [1.54696272E12, 0.523809523809524], [1.54696242E12, 18.25], [1.54696254E12, 1.2000000000000002], [1.54696248E12, 1.2142857142857149], [1.54696266E12, 0.508196721311476]], "isOverall": false, "label": "GetProjectDetails", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.54696272E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.54696242E12, "maxY": 8584.0, "series": [{"data": [[1.5469626E12, 3175.0], [1.54696272E12, 1812.0], [1.54696242E12, 536.0], [1.54696254E12, 1815.0], [1.54696248E12, 8584.0], [1.54696266E12, 8321.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.5469626E12, 1.0], [1.54696272E12, 2.0], [1.54696242E12, 5.0], [1.54696254E12, 2.0], [1.54696248E12, 1.0], [1.54696266E12, 2.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.5469626E12, 1016.2000000000003], [1.54696272E12, 1220.0], [1.54696242E12, 310.49999999999994], [1.54696254E12, 785.3000000000006], [1.54696248E12, 540.4000000000001], [1.54696266E12, 1197.2000000000003]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.5469626E12, 1869.2399999999998], [1.54696272E12, 2432.719999999994], [1.54696242E12, 536.0], [1.54696254E12, 1651.130000000001], [1.54696248E12, 1185.8799999999994], [1.54696266E12, 2462.239999999996]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.5469626E12, 1440.0], [1.54696272E12, 1623.9499999999998], [1.54696242E12, 355.49999999999994], [1.54696254E12, 1186.8999999999996], [1.54696248E12, 710.2], [1.54696266E12, 1606.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.54696272E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 26.0, "minX": 1000.0, "maxY": 138.0, "series": [{"data": [[1000.0, 26.0], [2000.0, 138.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1, "maxX": 2000.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 26.0, "minX": 1000.0, "maxY": 138.0, "series": [{"data": [[1000.0, 26.0], [2000.0, 138.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1, "maxX": 2000.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.9166666666666666, "minX": 1.54696242E12, "maxY": 24.416666666666668, "series": [{"data": [[1.5469626E12, 14.116666666666667], [1.54696272E12, 1.6666666666666667], [1.54696242E12, 0.9166666666666666], [1.54696254E12, 17.083333333333332], [1.54696248E12, 24.416666666666668], [1.54696266E12, 10.133333333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.54696272E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.8333333333333334, "minX": 1.54696242E12, "maxY": 24.416666666666668, "series": [{"data": [[1.5469626E12, 14.116666666666667], [1.54696272E12, 1.75], [1.54696242E12, 0.8333333333333334], [1.54696254E12, 17.083333333333332], [1.54696248E12, 24.416666666666668], [1.54696266E12, 10.133333333333333]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.54696272E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.11666666666666667, "minX": 1.54696242E12, "maxY": 4.9, "series": [{"data": [[1.5469626E12, 2.8333333333333335], [1.54696272E12, 0.35], [1.54696242E12, 0.16666666666666666], [1.54696254E12, 3.4166666666666665], [1.54696248E12, 4.85], [1.54696266E12, 2.0166666666666666]], "isOverall": false, "label": "GetTaskDetailList-success", "isController": false}, {"data": [[1.5469626E12, 2.816666666666667], [1.54696272E12, 0.35], [1.54696242E12, 0.11666666666666667], [1.54696254E12, 3.4166666666666665], [1.54696248E12, 4.9], [1.54696266E12, 2.033333333333333]], "isOverall": false, "label": "SubmitTaskDetail-success", "isController": false}, {"data": [[1.5469626E12, 2.816666666666667], [1.54696272E12, 0.35], [1.54696242E12, 0.2], [1.54696254E12, 3.4166666666666665], [1.54696248E12, 4.9], [1.54696266E12, 2.033333333333333]], "isOverall": false, "label": "GetUserDetails-success", "isController": false}, {"data": [[1.5469626E12, 2.816666666666667], [1.54696272E12, 0.35], [1.54696242E12, 0.2], [1.54696254E12, 3.4166666666666665], [1.54696248E12, 4.9], [1.54696266E12, 2.033333333333333]], "isOverall": false, "label": "GetProjectDetails-success", "isController": false}, {"data": [[1.5469626E12, 2.8333333333333335], [1.54696272E12, 0.35], [1.54696242E12, 0.15], [1.54696254E12, 3.4166666666666665], [1.54696248E12, 4.866666666666666], [1.54696266E12, 2.0166666666666666]], "isOverall": false, "label": "GetParentTaskList-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.54696272E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.8333333333333334, "minX": 1.54696242E12, "maxY": 24.416666666666668, "series": [{"data": [[1.5469626E12, 14.116666666666667], [1.54696272E12, 1.75], [1.54696242E12, 0.8333333333333334], [1.54696254E12, 17.083333333333332], [1.54696248E12, 24.416666666666668], [1.54696266E12, 10.133333333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.54696272E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

